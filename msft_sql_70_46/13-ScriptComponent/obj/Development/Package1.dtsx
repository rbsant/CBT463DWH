<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/8/2013 7:38:39 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="SQLNUGGET"
  DTS:CreatorName="SQLNUGGET\Administrator"
  DTS:DTSID="{0579E12F-9450-4992-9DEE-9EE07A3CEC2B}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.2100.60"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="14"
  DTS:VersionGUID="{34E45570-6C83-4123-90CC-C355FE151C81}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1C6E4D64-3DA9-4B9C-90F4-D49D3F702082}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Variable">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="SSIS.Pipeline.3"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{A9887DF7-5CB0-4ED0-B387-E64DBEBB588C}"
      DTS:ExecutableType="SSIS.Pipeline.3"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task\Row Count"
              componentClassID="{E2697D8C-70DA-42B2-8208-A19CE3A9FE41}"
              contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
              name="Row Count">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable to hold the row count."
                  name="VariableName">User::Variable</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Row Count.Inputs[Row Count Input 1]"
                  hasSideEffects="true"
                  name="Row Count Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Row Count.Outputs[Row Count Output 1]"
                  name="Row Count Output 1"
                  synchronousInputId="Package\Data Flow Task\Row Count.Inputs[Row Count Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Script Component"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="114">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\wsDNS\iplookup.wsdl]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://tempuri.org/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" targetNamespace="http://tempuri.org/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org/">
      <s:element name="DNSLookup">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="server" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="DNSLookupResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="DNSLookupResult" type="tns:DNSInfo" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:complexType name="DNSInfo">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="1" name="HostName" type="s:string" />
          <s:element minOccurs="0" maxOccurs="1" name="Aliases" type="tns:ArrayOfString" />
          <s:element minOccurs="0" maxOccurs="1" name="AddressList" type="tns:ArrayOfString" />
        </s:sequence>
      </s:complexType>
      <s:complexType name="ArrayOfString">
        <s:sequence>
          <s:element minOccurs="0" maxOccurs="unbounded" name="string" nillable="true" type="s:string" />
        </s:sequence>
      </s:complexType>
    </s:schema>
    <xs:schema xmlns:tns1="http://ws.strikeiron.com" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.strikeiron.com" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="LicenseInfo" type="tns1:LicenseInfo" />
      <xs:complexType name="LicenseInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="UnregisteredUser" type="tns1:UnregisteredUser" />
          <xs:element minOccurs="0" name="RegisteredUser" type="tns1:RegisteredUser" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="UnregisteredUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="EmailAddress" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RegisteredUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="UserID" type="xs:string" />
          <xs:element minOccurs="0" name="Password" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="SubscriptionInfo" type="tns1:SubscriptionInfo" />
      <xs:complexType name="SubscriptionInfo">
        <xs:sequence>
          <xs:element name="LicenseStatusCode" type="xs:int" />
          <xs:element minOccurs="0" name="LicenseStatus" type="xs:string" />
          <xs:element name="LicenseActionCode" type="xs:int" />
          <xs:element minOccurs="0" name="LicenseAction" type="xs:string" />
          <xs:element name="RemainingHits" type="xs:int" />
          <xs:element name="Amount" type="xs:decimal" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="GetRemainingHits">
        <xs:complexType />
      </xs:element>
      <xs:element name="GetRemainingHitsResponse">
        <xs:complexType />
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="DNSLookupSoapIn">
    <wsdl:part name="parameters" element="tns:DNSLookup" />
  </wsdl:message>
  <wsdl:message name="DNSLookupSoapOut">
    <wsdl:part name="parameters" element="tns:DNSLookupResponse" />
  </wsdl:message>
  <wsdl:message name="GetRemainingHitsSoapIn">
    <wsdl:part xmlns:q1="http://ws.strikeiron.com" name="parameters" element="q1:GetRemainingHits" />
  </wsdl:message>
  <wsdl:message name="GetRemainingHitsSoapOut">
    <wsdl:part xmlns:q2="http://ws.strikeiron.com" name="parameters" element="q2:GetRemainingHitsResponse" />
  </wsdl:message>
  <wsdl:message name="LicenseInfoMessage">
    <wsdl:part xmlns:q3="http://ws.strikeiron.com" name="LicenseInfo" element="q3:LicenseInfo" />
  </wsdl:message>
  <wsdl:message name="SubscriptionInfoMessage">
    <wsdl:part xmlns:q4="http://ws.strikeiron.com" name="SubscriptionInfo" element="q4:SubscriptionInfo" />
  </wsdl:message>
  <wsdl:portType name="DNSSoap">
    <wsdl:operation name="DNSLookup">
      <wsdl:input message="tns:DNSLookupSoapIn" />
      <wsdl:output message="tns:DNSLookupSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetRemainingHits">
      <wsdl:input message="tns:GetRemainingHitsSoapIn" />
      <wsdl:output message="tns:GetRemainingHitsSoapOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="DNSSoap" type="tns:DNSSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="DNSLookup">
      <soap:operation soapAction="http://tempuri.org/DNSLookup" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
        <soap:header message="tns:LicenseInfoMessage" part="LicenseInfo" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
        <soap:header message="tns:SubscriptionInfoMessage" part="SubscriptionInfo" use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetRemainingHits">
      <soap:operation soapAction="http://ws.strikeiron.com/relauto/iplookup/DNS/GetRemainingHits" />
      <wsdl:input>
        <soap:body use="literal" />
        <soap:header message="tns:LicenseInfoMessage" part="LicenseInfo" use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
        <soap:header message="tns:SubscriptionInfoMessage" part="SubscriptionInfo" use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="DNS">
    <wsdl:port name="DNSSoap" binding="tns:DNSSoap">
      <soap:address location="http://ws.strikeiron.com/relauto/iplookup/DNS" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1378a175ecbf4edda1761c1f68b42aa0.Properties.Settings.get_Default():SC_1378a175ecbf4edda1761c1f68b42aa0.Properties.Sett" +
    "ings")]

namespace SC_1378a175ecbf4edda1761c1f68b42aa0.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_1378a175ecbf4edda1761c1f68b42aa0</msb:CodeName>
		<msb:DisplayName>SC_1378a175ecbf4edda1761c1f68b42aa0</msb:DisplayName>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{B4EB5036-A052-4849-9902-E78D4C0BEF19}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_1378a175ecbf4edda1761c1f68b42aa0.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Service References\AW2012Service\SC_1378a175ecbf4edda1761c1f68b42aa0.AW2012Service.Customer.datasource"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="app.config"/>
		<msb:File Include="Service References\AW2012Service\Customers.wsdl"/>
		<msb:File Include="Service References\AW2012Service\Customers.xsd"/>
		<msb:File Include="Service References\AW2012Service\Customers2.xsd"/>
		<msb:File Include="Service References\AW2012Service\Customers1.xsd"/>
		<msb:File Include="Service References\AW2012Service\Customers.disco"/>
		<msb:File Include="Service References\AW2012Service\configuration91.svcinfo"/>
		<msb:File Include="Service References\AW2012Service\configuration.svcinfo"/>
		<msb:File Include="Service References\AW2012Service\Reference.svcmap"/>
		<msb:File Include="Service References\AW2012Service\Reference.cs"/>
		<msb:Folder Include="Service References\"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_1378a175ecbf4edda1761c1f68b42aa0")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Microsoft")]
[assembly: AssemblyProduct("SC_1378a175ecbf4edda1761c1f68b42aa0")]
[assembly: AssemblyCopyright("Copyright @ Microsoft 2013")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\wsDNS\Reference.svcmap]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<ReferenceGroup xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" ID="5e603915-850b-4913-9788-6986d7912626" xmlns="urn:schemas-microsoft-com:xml-wcfservicemap">
  <ClientOptions>
    <GenerateAsynchronousMethods>false</GenerateAsynchronousMethods>
    <EnableDataBinding>true</EnableDataBinding>
    <ExcludedTypes />
    <ImportXmlTypes>false</ImportXmlTypes>
    <GenerateInternalTypes>false</GenerateInternalTypes>
    <GenerateMessageContracts>false</GenerateMessageContracts>
    <NamespaceMappings />
    <CollectionMappings />
    <GenerateSerializableTypes>true</GenerateSerializableTypes>
    <Serializer>Auto</Serializer>
    <UseSerializerForFaults>true</UseSerializerForFaults>
    <ReferenceAllAssemblies>true</ReferenceAllAssemblies>
    <ReferencedAssemblies />
    <ReferencedDataContractTypes />
    <ServiceContractMappings />
  </ClientOptions>
  <MetadataSources>
    <MetadataSource Address="http://ws.strikeiron.com/relauto/iplookup?WSDL" Protocol="http" SourceId="1" />
  </MetadataSources>
  <Metadata>
    <MetadataFile FileName="iplookup.wsdl" MetadataType="Wsdl" ID="f5811385-5ca4-4bef-82d9-2ff605461361" SourceId="1" SourceUrl="http://ws.strikeiron.com/relauto/iplookup?WSDL" />
  </Metadata>
  <Extensions>
    <ExtensionFile FileName="configuration91.svcinfo" Name="configuration91.svcinfo" />
    <ExtensionFile FileName="configuration.svcinfo" Name="configuration.svcinfo" />
  </Extensions>
</ReferenceGroup>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\wsDNS\configuration.svcinfo]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<configurationSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:schemas-microsoft-com:xml-wcfconfigurationsnapshot">
  <behaviors />
  <bindings>
    <binding digest="System.ServiceModel.Configuration.BasicHttpBindingElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089:&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;Data hostNameComparisonMode=&quot;StrongWildcard&quot; maxBufferSize=&quot;65536&quot; messageEncoding=&quot;Text&quot; name=&quot;DNSSoap&quot; textEncoding=&quot;utf-8&quot; transferMode=&quot;Buffered&quot;&gt;&lt;readerQuotas maxArrayLength=&quot;16384&quot; maxBytesPerRead=&quot;4096&quot; maxDepth=&quot;32&quot; maxNameTableCharCount=&quot;16384&quot; maxStringContentLength=&quot;8192&quot; /&gt;&lt;security mode=&quot;None&quot;&gt;&lt;message algorithmSuite=&quot;Default&quot; clientCredentialType=&quot;UserName&quot; /&gt;&lt;transport clientCredentialType=&quot;None&quot; proxyCredentialType=&quot;None&quot; realm=&quot;&quot; /&gt;&lt;/security&gt;&lt;/Data&gt;" bindingType="basicHttpBinding" name="DNSSoap" />
  </bindings>
  <endpoints>
    <endpoint normalizedDigest="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;Data address=&quot;http://ws.strikeiron.com/relauto/iplookup/DNS&quot; binding=&quot;basicHttpBinding&quot; bindingConfiguration=&quot;DNSSoap&quot; contract=&quot;wsDNS.DNSSoap&quot; name=&quot;DNSSoap&quot; /&gt;" digest="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;Data address=&quot;http://ws.strikeiron.com/relauto/iplookup/DNS&quot; binding=&quot;basicHttpBinding&quot; bindingConfiguration=&quot;DNSSoap&quot; contract=&quot;wsDNS.DNSSoap&quot; name=&quot;DNSSoap&quot; /&gt;" contractName="wsDNS.DNSSoap" name="DNSSoap" />
  </endpoints>
</configurationSnapshot>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1378a175ecbf4edda1761c1f68b42aa0.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1378a175ecbf4edda1761c1f68b42aa0.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_1378a175ecbf4edda1761c1f68b42aa0.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_1378a175ecbf4edda1761c1f68b42aa0.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_1378a175ecbf4edda1761c1f68b42aa0.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String EmailAddress
    {
        set
        {
            this[0] = value;
        }
    }
    public bool EmailAddress_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LastName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool LastName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FirstName
    {
        set
        {
            this[2] = value;
        }
    }
    public bool FirstName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\wsDNS\configuration91.svcinfo]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<SavedWcfConfigurationInformation xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" Version="9.1" CheckSum="4stzoWw4S7DLYB/Qv3aKI1DCuZk=">
  <bindingConfigurations>
    <bindingConfiguration bindingType="basicHttpBinding" name="DNSSoap">
      <properties>
        <property path="/name" isComplexType="false" isExplicitlyDefined="true" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>DNSSoap</serializedValue>
        </property>
        <property path="/closeTimeout" isComplexType="false" isExplicitlyDefined="true" clrType="System.TimeSpan, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>00:01:00</serializedValue>
        </property>
        <property path="/openTimeout" isComplexType="false" isExplicitlyDefined="true" clrType="System.TimeSpan, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>00:01:00</serializedValue>
        </property>
        <property path="/receiveTimeout" isComplexType="false" isExplicitlyDefined="true" clrType="System.TimeSpan, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>00:10:00</serializedValue>
        </property>
        <property path="/sendTimeout" isComplexType="false" isExplicitlyDefined="true" clrType="System.TimeSpan, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>00:01:00</serializedValue>
        </property>
        <property path="/allowCookies" isComplexType="false" isExplicitlyDefined="true" clrType="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>False</serializedValue>
        </property>
        <property path="/bypassProxyOnLocal" isComplexType="false" isExplicitlyDefined="true" clrType="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>False</serializedValue>
        </property>
        <property path="/hostNameComparisonMode" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.HostNameComparisonMode, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>StrongWildcard</serializedValue>
        </property>
        <property path="/maxBufferSize" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>65536</serializedValue>
        </property>
        <property path="/maxBufferPoolSize" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>524288</serializedValue>
        </property>
        <property path="/maxReceivedMessageSize" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>65536</serializedValue>
        </property>
        <property path="/messageEncoding" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.WSMessageEncoding, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>Text</serializedValue>
        </property>
        <property path="/proxyAddress" isComplexType="false" isExplicitlyDefined="false" clrType="System.Uri, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/readerQuotas" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement</serializedValue>
        </property>
        <property path="/readerQuotas/maxDepth" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>32</serializedValue>
        </property>
        <property path="/readerQuotas/maxStringContentLength" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>8192</serializedValue>
        </property>
        <property path="/readerQuotas/maxArrayLength" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>16384</serializedValue>
        </property>
        <property path="/readerQuotas/maxBytesPerRead" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>4096</serializedValue>
        </property>
        <property path="/readerQuotas/maxNameTableCharCount" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>16384</serializedValue>
        </property>
        <property path="/security" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.BasicHttpSecurityElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.BasicHttpSecurityElement</serializedValue>
        </property>
        <property path="/security/mode" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.BasicHttpSecurityMode, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>None</serializedValue>
        </property>
        <property path="/security/transport" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.HttpTransportSecurityElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.HttpTransportSecurityElement</serializedValue>
        </property>
        <property path="/security/transport/clientCredentialType" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.HttpClientCredentialType, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>None</serializedValue>
        </property>
        <property path="/security/transport/proxyCredentialType" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.HttpProxyCredentialType, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>None</serializedValue>
        </property>
        <property path="/security/transport/extendedProtectionPolicy" isComplexType="true" isExplicitlyDefined="false" clrType="System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement</serializedValue>
        </property>
        <property path="/security/transport/extendedProtectionPolicy/policyEnforcement" isComplexType="false" isExplicitlyDefined="false" clrType="System.Security.Authentication.ExtendedProtection.PolicyEnforcement, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>Never</serializedValue>
        </property>
        <property path="/security/transport/extendedProtectionPolicy/protectionScenario" isComplexType="false" isExplicitlyDefined="false" clrType="System.Security.Authentication.ExtendedProtection.ProtectionScenario, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>TransportSelected</serializedValue>
        </property>
        <property path="/security/transport/extendedProtectionPolicy/customServiceNames" isComplexType="true" isExplicitlyDefined="false" clrType="System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>(Collection)</serializedValue>
        </property>
        <property path="/security/transport/realm" isComplexType="false" isExplicitlyDefined="true" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/security/message" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.BasicHttpMessageSecurityElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.BasicHttpMessageSecurityElement</serializedValue>
        </property>
        <property path="/security/message/clientCredentialType" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.BasicHttpMessageCredentialType, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>UserName</serializedValue>
        </property>
        <property path="/security/message/algorithmSuite" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.Security.SecurityAlgorithmSuite, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>Default</serializedValue>
        </property>
        <property path="/textEncoding" isComplexType="false" isExplicitlyDefined="true" clrType="System.Text.Encoding, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.Text.UTF8Encoding</serializedValue>
        </property>
        <property path="/transferMode" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.TransferMode, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>Buffered</serializedValue>
        </property>
        <property path="/useDefaultWebProxy" isComplexType="false" isExplicitlyDefined="true" clrType="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>True</serializedValue>
        </property>
      </properties>
    </bindingConfiguration>
  </bindingConfigurations>
  <endpoints>
    <endpoint name="DNSSoap" contract="wsDNS.DNSSoap" bindingType="basicHttpBinding" address="http://ws.strikeiron.com/relauto/iplookup/DNS" bindingConfiguration="DNSSoap">
      <properties>
        <property path="/address" isComplexType="false" isExplicitlyDefined="true" clrType="System.Uri, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>http://ws.strikeiron.com/relauto/iplookup/DNS</serializedValue>
        </property>
        <property path="/behaviorConfiguration" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/binding" isComplexType="false" isExplicitlyDefined="true" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>basicHttpBinding</serializedValue>
        </property>
        <property path="/bindingConfiguration" isComplexType="false" isExplicitlyDefined="true" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>DNSSoap</serializedValue>
        </property>
        <property path="/contract" isComplexType="false" isExplicitlyDefined="true" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>wsDNS.DNSSoap</serializedValue>
        </property>
        <property path="/headers" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.AddressHeaderCollectionElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.AddressHeaderCollectionElement</serializedValue>
        </property>
        <property path="/headers/headers" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.Channels.AddressHeaderCollection, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>&lt;Header /&gt;</serializedValue>
        </property>
        <property path="/identity" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.IdentityElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.IdentityElement</serializedValue>
        </property>
        <property path="/identity/userPrincipalName" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.UserPrincipalNameElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.UserPrincipalNameElement</serializedValue>
        </property>
        <property path="/identity/userPrincipalName/value" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/identity/servicePrincipalName" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.ServicePrincipalNameElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.ServicePrincipalNameElement</serializedValue>
        </property>
        <property path="/identity/servicePrincipalName/value" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/identity/dns" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.DnsElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.DnsElement</serializedValue>
        </property>
        <property path="/identity/dns/value" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/identity/rsa" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.RsaElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.RsaElement</serializedValue>
        </property>
        <property path="/identity/rsa/value" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/identity/certificate" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.CertificateElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.CertificateElement</serializedValue>
        </property>
        <property path="/identity/certificate/encodedValue" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/identity/certificateReference" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.CertificateReferenceElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.CertificateReferenceElement</serializedValue>
        </property>
        <property path="/identity/certificateReference/storeName" isComplexType="false" isExplicitlyDefined="false" clrType="System.Security.Cryptography.X509Certificates.StoreName, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>My</serializedValue>
        </property>
        <property path="/identity/certificateReference/storeLocation" isComplexType="false" isExplicitlyDefined="false" clrType="System.Security.Cryptography.X509Certificates.StoreLocation, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>LocalMachine</serializedValue>
        </property>
        <property path="/identity/certificateReference/x509FindType" isComplexType="false" isExplicitlyDefined="false" clrType="System.Security.Cryptography.X509Certificates.X509FindType, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>FindBySubjectDistinguishedName</serializedValue>
        </property>
        <property path="/identity/certificateReference/findValue" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/identity/certificateReference/isChainIncluded" isComplexType="false" isExplicitlyDefined="false" clrType="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>False</serializedValue>
        </property>
        <property path="/name" isComplexType="false" isExplicitlyDefined="true" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>DNSSoap</serializedValue>
        </property>
        <property path="/kind" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/endpointConfiguration" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
      </properties>
    </endpoint>
  </endpoints>
</SavedWcfConfigurationInformation>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\wsDNS\SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.SubscriptionInfo.datasource]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<!--
    This file is automatically generated by Visual Studio .Net. It is 
    used to store generic object data source configuration information.  
    Renaming the file extension or editing the content of this file may   
    cause the file to be unrecognizable by the program.
-->
<GenericObjectDataSource DisplayName="SubscriptionInfo" Version="1.0" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
   <TypeInfo>SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.SubscriptionInfo, Service References.wsDNS.Reference.cs, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null</TypeInfo>
</GenericObjectDataSource>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_1378a175ecbf4edda1761c1f68b42aa0.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9707F720-8BB9-4EE9-B577-F0ABB07E9DA3}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_1378a175ecbf4edda1761c1f68b42aa0</RootNamespace>
    <AssemblyName>SC_1378a175ecbf4edda1761c1f68b42aa0</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="Service References\AW2012Service\Reference.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Reference.svcmap</DependentUpon>
    </Compile>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.ServiceModel" />
    <Reference Include="System.Web.Services" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="app.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <None Include="Service References\AW2012Service\Customers.wsdl" />
    <None Include="Service References\AW2012Service\Customers.xsd">
      <SubType>Designer</SubType>
    </None>
    <None Include="Service References\AW2012Service\Customers1.xsd">
      <SubType>Designer</SubType>
    </None>
    <None Include="Service References\AW2012Service\Customers2.xsd">
      <SubType>Designer</SubType>
    </None>
    <None Include="Service References\AW2012Service\SC_1378a175ecbf4edda1761c1f68b42aa0.AW2012Service.Customer.datasource">
      <DependentUpon>Reference.svcmap</DependentUpon>
    </None>
  </ItemGroup>
  <ItemGroup>
    <WCFMetadata Include="Service References\" />
  </ItemGroup>
  <ItemGroup>
    <WCFMetadataStorage Include="Service References\AW2012Service\" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Service References\AW2012Service\Customers.disco" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Service References\AW2012Service\configuration91.svcinfo" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Service References\AW2012Service\configuration.svcinfo" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Service References\AW2012Service\Reference.svcmap">
      <Generator>WCF Proxy Generator</Generator>
      <LastGenOutput>Reference.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebug7d424fc4-bf25-4bdb-8fee-12b25d4cb1a2/1dd7b47f-d8eb-4699-8622-fdda826fa33a&quot;" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\wsDNS\Reference.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="wsDNS.DNSSoap")]
    public interface DNSSoap {
        
        // CODEGEN: Generating message contract since message DNSLookupRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DNSLookup", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.DNSLookupResponse DNSLookup(SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.DNSLookupRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://ws.strikeiron.com) of message GetRemainingHitsRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.strikeiron.com/relauto/iplookup/DNS/GetRemainingHits", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.GetRemainingHitsResponse GetRemainingHits(SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.GetRemainingHitsRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.strikeiron.com")]
    public partial class LicenseInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private UnregisteredUser unregisteredUserField;
        
        private RegisteredUser registeredUserField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public UnregisteredUser UnregisteredUser {
            get {
                return this.unregisteredUserField;
            }
            set {
                this.unregisteredUserField = value;
                this.RaisePropertyChanged("UnregisteredUser");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public RegisteredUser RegisteredUser {
            get {
                return this.registeredUserField;
            }
            set {
                this.registeredUserField = value;
                this.RaisePropertyChanged("RegisteredUser");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.strikeiron.com")]
    public partial class UnregisteredUser : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string emailAddressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
                this.RaisePropertyChanged("EmailAddress");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.strikeiron.com")]
    public partial class SubscriptionInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int licenseStatusCodeField;
        
        private string licenseStatusField;
        
        private int licenseActionCodeField;
        
        private string licenseActionField;
        
        private int remainingHitsField;
        
        private decimal amountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int LicenseStatusCode {
            get {
                return this.licenseStatusCodeField;
            }
            set {
                this.licenseStatusCodeField = value;
                this.RaisePropertyChanged("LicenseStatusCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string LicenseStatus {
            get {
                return this.licenseStatusField;
            }
            set {
                this.licenseStatusField = value;
                this.RaisePropertyChanged("LicenseStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int LicenseActionCode {
            get {
                return this.licenseActionCodeField;
            }
            set {
                this.licenseActionCodeField = value;
                this.RaisePropertyChanged("LicenseActionCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string LicenseAction {
            get {
                return this.licenseActionField;
            }
            set {
                this.licenseActionField = value;
                this.RaisePropertyChanged("LicenseAction");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int RemainingHits {
            get {
                return this.remainingHitsField;
            }
            set {
                this.remainingHitsField = value;
                this.RaisePropertyChanged("RemainingHits");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
                this.RaisePropertyChanged("Amount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.strikeiron.com")]
    public partial class RegisteredUser : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userIDField;
        
        private string passwordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
                this.RaisePropertyChanged("UserID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DNSInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string hostNameField;
        
        private string[] aliasesField;
        
        private string[] addressListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string HostName {
            get {
                return this.hostNameField;
            }
            set {
                this.hostNameField = value;
                this.RaisePropertyChanged("HostName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public string[] Aliases {
            get {
                return this.aliasesField;
            }
            set {
                this.aliasesField = value;
                this.RaisePropertyChanged("Aliases");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public string[] AddressList {
            get {
                return this.addressListField;
            }
            set {
                this.addressListField = value;
                this.RaisePropertyChanged("AddressList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DNSLookup", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DNSLookupRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ws.strikeiron.com")]
        public SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.LicenseInfo LicenseInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string server;
        
        public DNSLookupRequest() {
        }
        
        public DNSLookupRequest(SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.LicenseInfo LicenseInfo, string server) {
            this.LicenseInfo = LicenseInfo;
            this.server = server;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DNSLookupResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DNSLookupResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ws.strikeiron.com")]
        public SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.SubscriptionInfo SubscriptionInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.DNSInfo DNSLookupResult;
        
        public DNSLookupResponse() {
        }
        
        public DNSLookupResponse(SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.SubscriptionInfo SubscriptionInfo, SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.DNSInfo DNSLookupResult) {
            this.SubscriptionInfo = SubscriptionInfo;
            this.DNSLookupResult = DNSLookupResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRemainingHits", WrapperNamespace="http://ws.strikeiron.com", IsWrapped=true)]
    public partial class GetRemainingHitsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ws.strikeiron.com")]
        public SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.LicenseInfo LicenseInfo;
        
        public GetRemainingHitsRequest() {
        }
        
        public GetRemainingHitsRequest(SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.LicenseInfo LicenseInfo) {
            this.LicenseInfo = LicenseInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRemainingHitsResponse", WrapperNamespace="http://ws.strikeiron.com", IsWrapped=true)]
    public partial class GetRemainingHitsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://ws.strikeiron.com")]
        public SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.SubscriptionInfo SubscriptionInfo;
        
        public GetRemainingHitsResponse() {
        }
        
        public GetRemainingHitsResponse(SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.SubscriptionInfo SubscriptionInfo) {
            this.SubscriptionInfo = SubscriptionInfo;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DNSSoapChannel : SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.DNSSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DNSSoapClient : System.ServiceModel.ClientBase<SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.DNSSoap>, SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.DNSSoap {
        
        public DNSSoapClient() {
        }
        
        public DNSSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DNSSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DNSSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DNSSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.DNSLookupResponse SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.DNSSoap.DNSLookup(SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.DNSLookupRequest request) {
            return base.Channel.DNSLookup(request);
        }
        
        public SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.SubscriptionInfo DNSLookup(SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.LicenseInfo LicenseInfo, string server, out SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.DNSInfo DNSLookupResult) {
            SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.DNSLookupRequest inValue = new SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.DNSLookupRequest();
            inValue.LicenseInfo = LicenseInfo;
            inValue.server = server;
            SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.DNSLookupResponse retVal = ((SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.DNSSoap)(this)).DNSLookup(inValue);
            DNSLookupResult = retVal.DNSLookupResult;
            return retVal.SubscriptionInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.GetRemainingHitsResponse SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.DNSSoap.GetRemainingHits(SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.GetRemainingHitsRequest request) {
            return base.Channel.GetRemainingHits(request);
        }
        
        public SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.SubscriptionInfo GetRemainingHits(SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.LicenseInfo LicenseInfo) {
            SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.GetRemainingHitsRequest inValue = new SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.GetRemainingHitsRequest();
            inValue.LicenseInfo = LicenseInfo;
            SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.GetRemainingHitsResponse retVal = ((SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.DNSSoap)(this)).GetRemainingHits(inValue);
            return retVal.SubscriptionInfo;
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\wsDNS\SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.DNSInfo.datasource]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<!--
    This file is automatically generated by Visual Studio .Net. It is 
    used to store generic object data source configuration information.  
    Renaming the file extension or editing the content of this file may   
    cause the file to be unrecognizable by the program.
-->
<GenericObjectDataSource DisplayName="DNSInfo" Version="1.0" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
   <TypeInfo>SC_1378a175ecbf4edda1761c1f68b42aa0.wsDNS.DNSInfo, Service References.wsDNS.Reference.cs, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null</TypeInfo>
</GenericObjectDataSource>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[app.config]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <system.serviceModel>
        <bindings>
            <basicHttpBinding>
                <binding name="BasicHttpBinding_ICustomers" closeTimeout="00:01:00"
                    openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
                    allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard"
                    maxBufferSize="65536" maxBufferPoolSize="524288" maxReceivedMessageSize="65536"
                    messageEncoding="Text" textEncoding="utf-8" transferMode="Buffered"
                    useDefaultWebProxy="true">
                    <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
                        maxBytesPerRead="4096" maxNameTableCharCount="16384" />
                    <security mode="None">
                        <transport clientCredentialType="None" proxyCredentialType="None"
                            realm="" />
                        <message clientCredentialType="UserName" algorithmSuite="Default" />
                    </security>
                </binding>
            </basicHttpBinding>
        </bindings>
        <client>
            <endpoint address="http://localhost/CustomerWebService/Customers.svc"
                binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_ICustomers"
                contract="AW2012Service.ICustomers" name="BasicHttpBinding_ICustomers" />
        </client>
    </system.serviceModel>
</configuration>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Xml;
using System.Web.Services;
using SC_1378a175ecbf4edda1761c1f68b42aa0.AW2012Service;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    CustomersClient ws;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        ws = new CustomersClient();
        ws.Open();
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();

        ws.Close();
    }

    public override void CreateNewOutputRows()
    {
        Customer[] cust = ws.GetCustomersByRegion("Canada");

        foreach (Customer c in cust)
        {
            Output0Buffer.AddRow();
            Output0Buffer.FirstName = c.FirstName;
            Output0Buffer.LastName = c.LastName;
            Output0Buffer.EmailAddress = c.EmailAddress;
        }

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\AWService\configuration.svcinfo]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<configurationSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:schemas-microsoft-com:xml-wcfconfigurationsnapshot">
  <behaviors />
  <bindings>
    <binding digest="System.ServiceModel.Configuration.BasicHttpBindingElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089:&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;Data hostNameComparisonMode=&quot;StrongWildcard&quot; maxBufferSize=&quot;65536&quot; messageEncoding=&quot;Text&quot; name=&quot;BasicHttpBinding_ICustomers&quot; textEncoding=&quot;utf-8&quot; transferMode=&quot;Buffered&quot;&gt;&lt;readerQuotas maxArrayLength=&quot;16384&quot; maxBytesPerRead=&quot;4096&quot; maxDepth=&quot;32&quot; maxNameTableCharCount=&quot;16384&quot; maxStringContentLength=&quot;8192&quot; /&gt;&lt;security mode=&quot;None&quot;&gt;&lt;message algorithmSuite=&quot;Default&quot; clientCredentialType=&quot;UserName&quot; /&gt;&lt;transport clientCredentialType=&quot;None&quot; proxyCredentialType=&quot;None&quot; realm=&quot;&quot; /&gt;&lt;/security&gt;&lt;/Data&gt;" bindingType="basicHttpBinding" name="BasicHttpBinding_ICustomers" />
  </bindings>
  <endpoints>
    <endpoint normalizedDigest="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;Data address=&quot;http://localhost/CustomerWebService/Customers.svc&quot; binding=&quot;basicHttpBinding&quot; bindingConfiguration=&quot;BasicHttpBinding_ICustomers&quot; contract=&quot;AWService.ICustomers&quot; name=&quot;BasicHttpBinding_ICustomers&quot; /&gt;" digest="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;Data address=&quot;http://localhost/CustomerWebService/Customers.svc&quot; binding=&quot;basicHttpBinding&quot; bindingConfiguration=&quot;BasicHttpBinding_ICustomers&quot; contract=&quot;AWService.ICustomers&quot; name=&quot;BasicHttpBinding_ICustomers&quot; /&gt;" contractName="AWService.ICustomers" name="BasicHttpBinding_ICustomers" />
  </endpoints>
</configurationSnapshot>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\AWService\Customers.wsdl]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/08/addressing/policy" xmlns:wsa10="http://www.w3.org/2005/08/addressing" xmlns:tns="http://tempuri.org/" xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="Customers" targetNamespace="http://tempuri.org/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xsd:schema targetNamespace="http://tempuri.org/Imports">
      <xsd:import schemaLocation="http://localhost/CustomerWebService/Customers.svc?xsd=xsd0" namespace="http://tempuri.org/" />
      <xsd:import schemaLocation="http://localhost/CustomerWebService/Customers.svc?xsd=xsd1" namespace="http://schemas.microsoft.com/2003/10/Serialization/" />
      <xsd:import schemaLocation="http://localhost/CustomerWebService/Customers.svc?xsd=xsd2" namespace="http://schemas.datacontract.org/2004/07/AW2012CustomerService" />
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ICustomers_GetCustomer_InputMessage">
    <wsdl:part name="parameters" element="tns:GetCustomer" />
  </wsdl:message>
  <wsdl:message name="ICustomers_GetCustomer_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetCustomerResponse" />
  </wsdl:message>
  <wsdl:message name="ICustomers_GetCustomers_InputMessage">
    <wsdl:part name="parameters" element="tns:GetCustomers" />
  </wsdl:message>
  <wsdl:message name="ICustomers_GetCustomers_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetCustomersResponse" />
  </wsdl:message>
  <wsdl:portType name="ICustomers">
    <wsdl:operation name="GetCustomer">
      <wsdl:input wsaw:Action="http://tempuri.org/ICustomers/GetCustomer" message="tns:ICustomers_GetCustomer_InputMessage" />
      <wsdl:output wsaw:Action="http://tempuri.org/ICustomers/GetCustomerResponse" message="tns:ICustomers_GetCustomer_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetCustomers">
      <wsdl:input wsaw:Action="http://tempuri.org/ICustomers/GetCustomers" message="tns:ICustomers_GetCustomers_InputMessage" />
      <wsdl:output wsaw:Action="http://tempuri.org/ICustomers/GetCustomersResponse" message="tns:ICustomers_GetCustomers_OutputMessage" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BasicHttpBinding_ICustomers" type="tns:ICustomers">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="GetCustomer">
      <soap:operation soapAction="http://tempuri.org/ICustomers/GetCustomer" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCustomers">
      <soap:operation soapAction="http://tempuri.org/ICustomers/GetCustomers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="Customers">
    <wsdl:port name="BasicHttpBinding_ICustomers" binding="tns:BasicHttpBinding_ICustomers">
      <soap:address location="http://localhost/CustomerWebService/Customers.svc" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\AWService\Customers.disco]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<discovery xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/disco/">
  <contractRef ref="http://localhost/CustomerWebService/Customers.svc?wsdl" docRef="http://localhost/CustomerWebService/Customers.svc" xmlns="http://schemas.xmlsoap.org/disco/scl/" />
</discovery>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\AWService\Customers.xsd]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:tns="http://schemas.datacontract.org/2004/07/AW2012CustomerService" elementFormDefault="qualified" targetNamespace="http://schemas.datacontract.org/2004/07/AW2012CustomerService" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:complexType name="Customer">
    <xs:sequence>
      <xs:element minOccurs="0" name="AddressLine1" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="AddressLine2" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="AddressType" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="BusinessEntityID" type="xs:int" />
      <xs:element minOccurs="0" name="City" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="CountryRegionName" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="Demographics" nillable="true">
        <xs:complexType>
          <xs:sequence>
            <xs:any minOccurs="0" processContents="lax" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="EmailAddress" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="EmailPromotion" type="xs:int" />
      <xs:element minOccurs="0" name="FirstName" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="LastName" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="MiddleName" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="PhoneNumber" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="PhoneNumberType" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="PostalCode" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="StateProvinceName" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="Suffix" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="Title" nillable="true" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Customer" nillable="true" type="tns:Customer" />
  <xs:complexType name="ArrayOfCustomer">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="Customer" nillable="true" type="tns:Customer" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfCustomer" nillable="true" type="tns:ArrayOfCustomer" />
</xs:schema>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\AWService\Customers2.xsd]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:tns="http://tempuri.org/" elementFormDefault="qualified" targetNamespace="http://tempuri.org/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import schemaLocation="http://localhost/CustomerWebService/Customers.svc?xsd=xsd2" namespace="http://schemas.datacontract.org/2004/07/AW2012CustomerService" />
  <xs:element name="GetCustomer">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="customerID" type="xs:int" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetCustomerResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element xmlns:q1="http://schemas.datacontract.org/2004/07/AW2012CustomerService" minOccurs="0" name="GetCustomerResult" nillable="true" type="q1:Customer" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetCustomers">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="GetCustomersResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element xmlns:q2="http://schemas.datacontract.org/2004/07/AW2012CustomerService" minOccurs="0" name="GetCustomersResult" nillable="true" type="q2:ArrayOfCustomer" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\AWService\Customers1.xsd]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="anyType" nillable="true" type="xs:anyType" />
  <xs:element name="anyURI" nillable="true" type="xs:anyURI" />
  <xs:element name="base64Binary" nillable="true" type="xs:base64Binary" />
  <xs:element name="boolean" nillable="true" type="xs:boolean" />
  <xs:element name="byte" nillable="true" type="xs:byte" />
  <xs:element name="dateTime" nillable="true" type="xs:dateTime" />
  <xs:element name="decimal" nillable="true" type="xs:decimal" />
  <xs:element name="double" nillable="true" type="xs:double" />
  <xs:element name="float" nillable="true" type="xs:float" />
  <xs:element name="int" nillable="true" type="xs:int" />
  <xs:element name="long" nillable="true" type="xs:long" />
  <xs:element name="QName" nillable="true" type="xs:QName" />
  <xs:element name="short" nillable="true" type="xs:short" />
  <xs:element name="string" nillable="true" type="xs:string" />
  <xs:element name="unsignedByte" nillable="true" type="xs:unsignedByte" />
  <xs:element name="unsignedInt" nillable="true" type="xs:unsignedInt" />
  <xs:element name="unsignedLong" nillable="true" type="xs:unsignedLong" />
  <xs:element name="unsignedShort" nillable="true" type="xs:unsignedShort" />
  <xs:element name="char" nillable="true" type="tns:char" />
  <xs:simpleType name="char">
    <xs:restriction base="xs:int" />
  </xs:simpleType>
  <xs:element name="duration" nillable="true" type="tns:duration" />
  <xs:simpleType name="duration">
    <xs:restriction base="xs:duration">
      <xs:pattern value="\-?P(\d*D)?(T(\d*H)?(\d*M)?(\d*(\.\d*)?S)?)?" />
      <xs:minInclusive value="-P10675199DT2H48M5.4775808S" />
      <xs:maxInclusive value="P10675199DT2H48M5.4775807S" />
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="guid" nillable="true" type="tns:guid" />
  <xs:simpleType name="guid">
    <xs:restriction base="xs:string">
      <xs:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}" />
    </xs:restriction>
  </xs:simpleType>
  <xs:attribute name="FactoryType" type="xs:QName" />
  <xs:attribute name="Id" type="xs:ID" />
  <xs:attribute name="Ref" type="xs:IDREF" />
</xs:schema>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\AWService\Reference.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SC_1378a175ecbf4edda1761c1f68b42aa0.AWService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/AW2012CustomerService")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BusinessEntityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryRegionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Xml.XmlElement DemographicsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmailPromotionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateProvinceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine1 {
            get {
                return this.AddressLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine1Field, value) != true)) {
                    this.AddressLine1Field = value;
                    this.RaisePropertyChanged("AddressLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine2 {
            get {
                return this.AddressLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine2Field, value) != true)) {
                    this.AddressLine2Field = value;
                    this.RaisePropertyChanged("AddressLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressType {
            get {
                return this.AddressTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressTypeField, value) != true)) {
                    this.AddressTypeField = value;
                    this.RaisePropertyChanged("AddressType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BusinessEntityID {
            get {
                return this.BusinessEntityIDField;
            }
            set {
                if ((this.BusinessEntityIDField.Equals(value) != true)) {
                    this.BusinessEntityIDField = value;
                    this.RaisePropertyChanged("BusinessEntityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryRegionName {
            get {
                return this.CountryRegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryRegionNameField, value) != true)) {
                    this.CountryRegionNameField = value;
                    this.RaisePropertyChanged("CountryRegionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Xml.XmlElement Demographics {
            get {
                return this.DemographicsField;
            }
            set {
                if ((object.ReferenceEquals(this.DemographicsField, value) != true)) {
                    this.DemographicsField = value;
                    this.RaisePropertyChanged("Demographics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmailPromotion {
            get {
                return this.EmailPromotionField;
            }
            set {
                if ((this.EmailPromotionField.Equals(value) != true)) {
                    this.EmailPromotionField = value;
                    this.RaisePropertyChanged("EmailPromotion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumberType {
            get {
                return this.PhoneNumberTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberTypeField, value) != true)) {
                    this.PhoneNumberTypeField = value;
                    this.RaisePropertyChanged("PhoneNumberType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateProvinceName {
            get {
                return this.StateProvinceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateProvinceNameField, value) != true)) {
                    this.StateProvinceNameField = value;
                    this.RaisePropertyChanged("StateProvinceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suffix {
            get {
                return this.SuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SuffixField, value) != true)) {
                    this.SuffixField = value;
                    this.RaisePropertyChanged("Suffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AWService.ICustomers")]
    public interface ICustomers {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomers/GetCustomer", ReplyAction="http://tempuri.org/ICustomers/GetCustomerResponse")]
        SC_1378a175ecbf4edda1761c1f68b42aa0.AWService.Customer GetCustomer(int customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomers/GetCustomers", ReplyAction="http://tempuri.org/ICustomers/GetCustomersResponse")]
        SC_1378a175ecbf4edda1761c1f68b42aa0.AWService.Customer[] GetCustomers();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomersChannel : SC_1378a175ecbf4edda1761c1f68b42aa0.AWService.ICustomers, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomersClient : System.ServiceModel.ClientBase<SC_1378a175ecbf4edda1761c1f68b42aa0.AWService.ICustomers>, SC_1378a175ecbf4edda1761c1f68b42aa0.AWService.ICustomers {
        
        public CustomersClient() {
        }
        
        public CustomersClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomersClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomersClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomersClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SC_1378a175ecbf4edda1761c1f68b42aa0.AWService.Customer GetCustomer(int customerID) {
            return base.Channel.GetCustomer(customerID);
        }
        
        public SC_1378a175ecbf4edda1761c1f68b42aa0.AWService.Customer[] GetCustomers() {
            return base.Channel.GetCustomers();
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\AWService\Reference.svcmap]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<ReferenceGroup xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" ID="4a2950a8-8911-464c-aef3-9c1d83db0dba" xmlns="urn:schemas-microsoft-com:xml-wcfservicemap">
  <ClientOptions>
    <GenerateAsynchronousMethods>false</GenerateAsynchronousMethods>
    <EnableDataBinding>true</EnableDataBinding>
    <ExcludedTypes />
    <ImportXmlTypes>false</ImportXmlTypes>
    <GenerateInternalTypes>false</GenerateInternalTypes>
    <GenerateMessageContracts>false</GenerateMessageContracts>
    <NamespaceMappings />
    <CollectionMappings />
    <GenerateSerializableTypes>true</GenerateSerializableTypes>
    <Serializer>Auto</Serializer>
    <UseSerializerForFaults>true</UseSerializerForFaults>
    <ReferenceAllAssemblies>true</ReferenceAllAssemblies>
    <ReferencedAssemblies />
    <ReferencedDataContractTypes />
    <ServiceContractMappings />
  </ClientOptions>
  <MetadataSources>
    <MetadataSource Address="http://localhost/CustomerWebService/Customers.svc" Protocol="http" SourceId="1" />
  </MetadataSources>
  <Metadata>
    <MetadataFile FileName="Customers.xsd" MetadataType="Schema" ID="16bf3963-d65f-4919-b52f-e6c12f558edf" SourceId="1" SourceUrl="http://localhost/CustomerWebService/Customers.svc?xsd=xsd2" />
    <MetadataFile FileName="Customers.disco" MetadataType="Disco" ID="575b0d10-b73e-4a7c-9936-78eac194ef06" SourceId="1" SourceUrl="http://localhost/CustomerWebService/Customers.svc?disco" />
    <MetadataFile FileName="Customers1.xsd" MetadataType="Schema" ID="e7502102-c9f3-4f10-947d-a266eace1e63" SourceId="1" SourceUrl="http://localhost/CustomerWebService/Customers.svc?xsd=xsd1" />
    <MetadataFile FileName="Customers.wsdl" MetadataType="Wsdl" ID="407ea137-cc80-4ba4-b971-64ca8a4c311b" SourceId="1" SourceUrl="http://localhost/CustomerWebService/Customers.svc?wsdl" />
    <MetadataFile FileName="Customers2.xsd" MetadataType="Schema" ID="ae1c320f-ba15-499c-bed0-9590d015c919" SourceId="1" SourceUrl="http://localhost/CustomerWebService/Customers.svc?xsd=xsd0" />
  </Metadata>
  <Extensions>
    <ExtensionFile FileName="configuration91.svcinfo" Name="configuration91.svcinfo" />
    <ExtensionFile FileName="configuration.svcinfo" Name="configuration.svcinfo" />
  </Extensions>
</ReferenceGroup>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\AWService\configuration91.svcinfo]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<SavedWcfConfigurationInformation xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" Version="9.1" CheckSum="eH3I2K3S2/SnNvsrs1IBEm25R1w=">
  <bindingConfigurations>
    <bindingConfiguration bindingType="basicHttpBinding" name="BasicHttpBinding_ICustomers">
      <properties>
        <property path="/name" isComplexType="false" isExplicitlyDefined="true" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>BasicHttpBinding_ICustomers</serializedValue>
        </property>
        <property path="/closeTimeout" isComplexType="false" isExplicitlyDefined="true" clrType="System.TimeSpan, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>00:01:00</serializedValue>
        </property>
        <property path="/openTimeout" isComplexType="false" isExplicitlyDefined="true" clrType="System.TimeSpan, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>00:01:00</serializedValue>
        </property>
        <property path="/receiveTimeout" isComplexType="false" isExplicitlyDefined="true" clrType="System.TimeSpan, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>00:10:00</serializedValue>
        </property>
        <property path="/sendTimeout" isComplexType="false" isExplicitlyDefined="true" clrType="System.TimeSpan, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>00:01:00</serializedValue>
        </property>
        <property path="/allowCookies" isComplexType="false" isExplicitlyDefined="true" clrType="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>False</serializedValue>
        </property>
        <property path="/bypassProxyOnLocal" isComplexType="false" isExplicitlyDefined="true" clrType="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>False</serializedValue>
        </property>
        <property path="/hostNameComparisonMode" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.HostNameComparisonMode, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>StrongWildcard</serializedValue>
        </property>
        <property path="/maxBufferSize" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>65536</serializedValue>
        </property>
        <property path="/maxBufferPoolSize" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>524288</serializedValue>
        </property>
        <property path="/maxReceivedMessageSize" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>65536</serializedValue>
        </property>
        <property path="/messageEncoding" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.WSMessageEncoding, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>Text</serializedValue>
        </property>
        <property path="/proxyAddress" isComplexType="false" isExplicitlyDefined="false" clrType="System.Uri, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/readerQuotas" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement</serializedValue>
        </property>
        <property path="/readerQuotas/maxDepth" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>32</serializedValue>
        </property>
        <property path="/readerQuotas/maxStringContentLength" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>8192</serializedValue>
        </property>
        <property path="/readerQuotas/maxArrayLength" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>16384</serializedValue>
        </property>
        <property path="/readerQuotas/maxBytesPerRead" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>4096</serializedValue>
        </property>
        <property path="/readerQuotas/maxNameTableCharCount" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>16384</serializedValue>
        </property>
        <property path="/security" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.BasicHttpSecurityElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.BasicHttpSecurityElement</serializedValue>
        </property>
        <property path="/security/mode" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.BasicHttpSecurityMode, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>None</serializedValue>
        </property>
        <property path="/security/transport" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.HttpTransportSecurityElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.HttpTransportSecurityElement</serializedValue>
        </property>
        <property path="/security/transport/clientCredentialType" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.HttpClientCredentialType, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>None</serializedValue>
        </property>
        <property path="/security/transport/proxyCredentialType" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.HttpProxyCredentialType, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>None</serializedValue>
        </property>
        <property path="/security/transport/extendedProtectionPolicy" isComplexType="true" isExplicitlyDefined="false" clrType="System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement</serializedValue>
        </property>
        <property path="/security/transport/extendedProtectionPolicy/policyEnforcement" isComplexType="false" isExplicitlyDefined="false" clrType="System.Security.Authentication.ExtendedProtection.PolicyEnforcement, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>Never</serializedValue>
        </property>
        <property path="/security/transport/extendedProtectionPolicy/protectionScenario" isComplexType="false" isExplicitlyDefined="false" clrType="System.Security.Authentication.ExtendedProtection.ProtectionScenario, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>TransportSelected</serializedValue>
        </property>
        <property path="/security/transport/extendedProtectionPolicy/customServiceNames" isComplexType="true" isExplicitlyDefined="false" clrType="System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>(Collection)</serializedValue>
        </property>
        <property path="/security/transport/realm" isComplexType="false" isExplicitlyDefined="true" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/security/message" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.BasicHttpMessageSecurityElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.BasicHttpMessageSecurityElement</serializedValue>
        </property>
        <property path="/security/message/clientCredentialType" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.BasicHttpMessageCredentialType, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>UserName</serializedValue>
        </property>
        <property path="/security/message/algorithmSuite" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.Security.SecurityAlgorithmSuite, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>Default</serializedValue>
        </property>
        <property path="/textEncoding" isComplexType="false" isExplicitlyDefined="true" clrType="System.Text.Encoding, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.Text.UTF8Encoding</serializedValue>
        </property>
        <property path="/transferMode" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.TransferMode, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>Buffered</serializedValue>
        </property>
        <property path="/useDefaultWebProxy" isComplexType="false" isExplicitlyDefined="true" clrType="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>True</serializedValue>
        </property>
      </properties>
    </bindingConfiguration>
  </bindingConfigurations>
  <endpoints>
    <endpoint name="BasicHttpBinding_ICustomers" contract="AWService.ICustomers" bindingType="basicHttpBinding" address="http://localhost/CustomerWebService/Customers.svc" bindingConfiguration="BasicHttpBinding_ICustomers">
      <properties>
        <property path="/address" isComplexType="false" isExplicitlyDefined="true" clrType="System.Uri, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>http://localhost/CustomerWebService/Customers.svc</serializedValue>
        </property>
        <property path="/behaviorConfiguration" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/binding" isComplexType="false" isExplicitlyDefined="true" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>basicHttpBinding</serializedValue>
        </property>
        <property path="/bindingConfiguration" isComplexType="false" isExplicitlyDefined="true" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>BasicHttpBinding_ICustomers</serializedValue>
        </property>
        <property path="/contract" isComplexType="false" isExplicitlyDefined="true" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>AWService.ICustomers</serializedValue>
        </property>
        <property path="/headers" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.AddressHeaderCollectionElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.AddressHeaderCollectionElement</serializedValue>
        </property>
        <property path="/headers/headers" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.Channels.AddressHeaderCollection, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>&lt;Header /&gt;</serializedValue>
        </property>
        <property path="/identity" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.IdentityElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.IdentityElement</serializedValue>
        </property>
        <property path="/identity/userPrincipalName" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.UserPrincipalNameElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.UserPrincipalNameElement</serializedValue>
        </property>
        <property path="/identity/userPrincipalName/value" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/identity/servicePrincipalName" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.ServicePrincipalNameElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.ServicePrincipalNameElement</serializedValue>
        </property>
        <property path="/identity/servicePrincipalName/value" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/identity/dns" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.DnsElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.DnsElement</serializedValue>
        </property>
        <property path="/identity/dns/value" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/identity/rsa" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.RsaElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.RsaElement</serializedValue>
        </property>
        <property path="/identity/rsa/value" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/identity/certificate" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.CertificateElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.CertificateElement</serializedValue>
        </property>
        <property path="/identity/certificate/encodedValue" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/identity/certificateReference" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.CertificateReferenceElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.CertificateReferenceElement</serializedValue>
        </property>
        <property path="/identity/certificateReference/storeName" isComplexType="false" isExplicitlyDefined="false" clrType="System.Security.Cryptography.X509Certificates.StoreName, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>My</serializedValue>
        </property>
        <property path="/identity/certificateReference/storeLocation" isComplexType="false" isExplicitlyDefined="false" clrType="System.Security.Cryptography.X509Certificates.StoreLocation, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>LocalMachine</serializedValue>
        </property>
        <property path="/identity/certificateReference/x509FindType" isComplexType="false" isExplicitlyDefined="false" clrType="System.Security.Cryptography.X509Certificates.X509FindType, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>FindBySubjectDistinguishedName</serializedValue>
        </property>
        <property path="/identity/certificateReference/findValue" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/identity/certificateReference/isChainIncluded" isComplexType="false" isExplicitlyDefined="false" clrType="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>False</serializedValue>
        </property>
        <property path="/name" isComplexType="false" isExplicitlyDefined="true" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>BasicHttpBinding_ICustomers</serializedValue>
        </property>
        <property path="/kind" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/endpointConfiguration" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
      </properties>
    </endpoint>
  </endpoints>
</SavedWcfConfigurationInformation>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\AWService\SC_1378a175ecbf4edda1761c1f68b42aa0.AWService.Customer.datasource]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<!--
    This file is automatically generated by Visual Studio .Net. It is 
    used to store generic object data source configuration information.  
    Renaming the file extension or editing the content of this file may   
    cause the file to be unrecognizable by the program.
-->
<GenericObjectDataSource DisplayName="Customer" Version="1.0" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
   <TypeInfo>SC_1378a175ecbf4edda1761c1f68b42aa0.AWService.Customer, Service References.AWService.Reference.cs, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null</TypeInfo>
</GenericObjectDataSource>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\AW2012Service\configuration.svcinfo]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<configurationSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="urn:schemas-microsoft-com:xml-wcfconfigurationsnapshot">
  <behaviors />
  <bindings>
    <binding digest="System.ServiceModel.Configuration.BasicHttpBindingElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089:&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;Data hostNameComparisonMode=&quot;StrongWildcard&quot; maxBufferSize=&quot;65536&quot; messageEncoding=&quot;Text&quot; name=&quot;BasicHttpBinding_ICustomers&quot; textEncoding=&quot;utf-8&quot; transferMode=&quot;Buffered&quot;&gt;&lt;readerQuotas maxArrayLength=&quot;16384&quot; maxBytesPerRead=&quot;4096&quot; maxDepth=&quot;32&quot; maxNameTableCharCount=&quot;16384&quot; maxStringContentLength=&quot;8192&quot; /&gt;&lt;security mode=&quot;None&quot;&gt;&lt;message algorithmSuite=&quot;Default&quot; clientCredentialType=&quot;UserName&quot; /&gt;&lt;transport clientCredentialType=&quot;None&quot; proxyCredentialType=&quot;None&quot; realm=&quot;&quot; /&gt;&lt;/security&gt;&lt;/Data&gt;" bindingType="basicHttpBinding" name="BasicHttpBinding_ICustomers" />
  </bindings>
  <endpoints>
    <endpoint normalizedDigest="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;Data address=&quot;http://localhost/CustomerWebService/Customers.svc&quot; binding=&quot;basicHttpBinding&quot; bindingConfiguration=&quot;BasicHttpBinding_ICustomers&quot; contract=&quot;AW2012Service.ICustomers&quot; name=&quot;BasicHttpBinding_ICustomers&quot; /&gt;" digest="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;&lt;Data address=&quot;http://localhost/CustomerWebService/Customers.svc&quot; binding=&quot;basicHttpBinding&quot; bindingConfiguration=&quot;BasicHttpBinding_ICustomers&quot; contract=&quot;AW2012Service.ICustomers&quot; name=&quot;BasicHttpBinding_ICustomers&quot; /&gt;" contractName="AW2012Service.ICustomers" name="BasicHttpBinding_ICustomers" />
  </endpoints>
</configurationSnapshot>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\AW2012Service\Customers.disco]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<discovery xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/disco/">
  <contractRef ref="http://localhost/CustomerWebService/Customers.svc?wsdl" docRef="http://localhost/CustomerWebService/Customers.svc" xmlns="http://schemas.xmlsoap.org/disco/scl/" />
</discovery>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\AW2012Service\configuration91.svcinfo]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<SavedWcfConfigurationInformation xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" Version="9.1" CheckSum="Jwb/NDAi73Cvekh2LVNx9nJZMPI=">
  <bindingConfigurations>
    <bindingConfiguration bindingType="basicHttpBinding" name="BasicHttpBinding_ICustomers">
      <properties>
        <property path="/name" isComplexType="false" isExplicitlyDefined="true" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>BasicHttpBinding_ICustomers</serializedValue>
        </property>
        <property path="/closeTimeout" isComplexType="false" isExplicitlyDefined="true" clrType="System.TimeSpan, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>00:01:00</serializedValue>
        </property>
        <property path="/openTimeout" isComplexType="false" isExplicitlyDefined="true" clrType="System.TimeSpan, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>00:01:00</serializedValue>
        </property>
        <property path="/receiveTimeout" isComplexType="false" isExplicitlyDefined="true" clrType="System.TimeSpan, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>00:10:00</serializedValue>
        </property>
        <property path="/sendTimeout" isComplexType="false" isExplicitlyDefined="true" clrType="System.TimeSpan, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>00:01:00</serializedValue>
        </property>
        <property path="/allowCookies" isComplexType="false" isExplicitlyDefined="true" clrType="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>False</serializedValue>
        </property>
        <property path="/bypassProxyOnLocal" isComplexType="false" isExplicitlyDefined="true" clrType="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>False</serializedValue>
        </property>
        <property path="/hostNameComparisonMode" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.HostNameComparisonMode, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>StrongWildcard</serializedValue>
        </property>
        <property path="/maxBufferSize" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>65536</serializedValue>
        </property>
        <property path="/maxBufferPoolSize" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>524288</serializedValue>
        </property>
        <property path="/maxReceivedMessageSize" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>65536</serializedValue>
        </property>
        <property path="/messageEncoding" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.WSMessageEncoding, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>Text</serializedValue>
        </property>
        <property path="/proxyAddress" isComplexType="false" isExplicitlyDefined="false" clrType="System.Uri, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/readerQuotas" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement</serializedValue>
        </property>
        <property path="/readerQuotas/maxDepth" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>32</serializedValue>
        </property>
        <property path="/readerQuotas/maxStringContentLength" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>8192</serializedValue>
        </property>
        <property path="/readerQuotas/maxArrayLength" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>16384</serializedValue>
        </property>
        <property path="/readerQuotas/maxBytesPerRead" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>4096</serializedValue>
        </property>
        <property path="/readerQuotas/maxNameTableCharCount" isComplexType="false" isExplicitlyDefined="true" clrType="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>16384</serializedValue>
        </property>
        <property path="/security" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.BasicHttpSecurityElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.BasicHttpSecurityElement</serializedValue>
        </property>
        <property path="/security/mode" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.BasicHttpSecurityMode, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>None</serializedValue>
        </property>
        <property path="/security/transport" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.HttpTransportSecurityElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.HttpTransportSecurityElement</serializedValue>
        </property>
        <property path="/security/transport/clientCredentialType" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.HttpClientCredentialType, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>None</serializedValue>
        </property>
        <property path="/security/transport/proxyCredentialType" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.HttpProxyCredentialType, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>None</serializedValue>
        </property>
        <property path="/security/transport/extendedProtectionPolicy" isComplexType="true" isExplicitlyDefined="false" clrType="System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement</serializedValue>
        </property>
        <property path="/security/transport/extendedProtectionPolicy/policyEnforcement" isComplexType="false" isExplicitlyDefined="false" clrType="System.Security.Authentication.ExtendedProtection.PolicyEnforcement, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>Never</serializedValue>
        </property>
        <property path="/security/transport/extendedProtectionPolicy/protectionScenario" isComplexType="false" isExplicitlyDefined="false" clrType="System.Security.Authentication.ExtendedProtection.ProtectionScenario, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>TransportSelected</serializedValue>
        </property>
        <property path="/security/transport/extendedProtectionPolicy/customServiceNames" isComplexType="true" isExplicitlyDefined="false" clrType="System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>(Collection)</serializedValue>
        </property>
        <property path="/security/transport/realm" isComplexType="false" isExplicitlyDefined="true" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/security/message" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.BasicHttpMessageSecurityElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.BasicHttpMessageSecurityElement</serializedValue>
        </property>
        <property path="/security/message/clientCredentialType" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.BasicHttpMessageCredentialType, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>UserName</serializedValue>
        </property>
        <property path="/security/message/algorithmSuite" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.Security.SecurityAlgorithmSuite, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>Default</serializedValue>
        </property>
        <property path="/textEncoding" isComplexType="false" isExplicitlyDefined="true" clrType="System.Text.Encoding, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.Text.UTF8Encoding</serializedValue>
        </property>
        <property path="/transferMode" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.TransferMode, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>Buffered</serializedValue>
        </property>
        <property path="/useDefaultWebProxy" isComplexType="false" isExplicitlyDefined="true" clrType="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>True</serializedValue>
        </property>
      </properties>
    </bindingConfiguration>
  </bindingConfigurations>
  <endpoints>
    <endpoint name="BasicHttpBinding_ICustomers" contract="AW2012Service.ICustomers" bindingType="basicHttpBinding" address="http://localhost/CustomerWebService/Customers.svc" bindingConfiguration="BasicHttpBinding_ICustomers">
      <properties>
        <property path="/address" isComplexType="false" isExplicitlyDefined="true" clrType="System.Uri, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>http://localhost/CustomerWebService/Customers.svc</serializedValue>
        </property>
        <property path="/behaviorConfiguration" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/binding" isComplexType="false" isExplicitlyDefined="true" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>basicHttpBinding</serializedValue>
        </property>
        <property path="/bindingConfiguration" isComplexType="false" isExplicitlyDefined="true" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>BasicHttpBinding_ICustomers</serializedValue>
        </property>
        <property path="/contract" isComplexType="false" isExplicitlyDefined="true" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>AW2012Service.ICustomers</serializedValue>
        </property>
        <property path="/headers" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.AddressHeaderCollectionElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.AddressHeaderCollectionElement</serializedValue>
        </property>
        <property path="/headers/headers" isComplexType="false" isExplicitlyDefined="true" clrType="System.ServiceModel.Channels.AddressHeaderCollection, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>&lt;Header /&gt;</serializedValue>
        </property>
        <property path="/identity" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.IdentityElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.IdentityElement</serializedValue>
        </property>
        <property path="/identity/userPrincipalName" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.UserPrincipalNameElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.UserPrincipalNameElement</serializedValue>
        </property>
        <property path="/identity/userPrincipalName/value" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/identity/servicePrincipalName" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.ServicePrincipalNameElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.ServicePrincipalNameElement</serializedValue>
        </property>
        <property path="/identity/servicePrincipalName/value" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/identity/dns" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.DnsElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.DnsElement</serializedValue>
        </property>
        <property path="/identity/dns/value" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/identity/rsa" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.RsaElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.RsaElement</serializedValue>
        </property>
        <property path="/identity/rsa/value" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/identity/certificate" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.CertificateElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.CertificateElement</serializedValue>
        </property>
        <property path="/identity/certificate/encodedValue" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/identity/certificateReference" isComplexType="true" isExplicitlyDefined="false" clrType="System.ServiceModel.Configuration.CertificateReferenceElement, System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>System.ServiceModel.Configuration.CertificateReferenceElement</serializedValue>
        </property>
        <property path="/identity/certificateReference/storeName" isComplexType="false" isExplicitlyDefined="false" clrType="System.Security.Cryptography.X509Certificates.StoreName, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>My</serializedValue>
        </property>
        <property path="/identity/certificateReference/storeLocation" isComplexType="false" isExplicitlyDefined="false" clrType="System.Security.Cryptography.X509Certificates.StoreLocation, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>LocalMachine</serializedValue>
        </property>
        <property path="/identity/certificateReference/x509FindType" isComplexType="false" isExplicitlyDefined="false" clrType="System.Security.Cryptography.X509Certificates.X509FindType, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>FindBySubjectDistinguishedName</serializedValue>
        </property>
        <property path="/identity/certificateReference/findValue" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/identity/certificateReference/isChainIncluded" isComplexType="false" isExplicitlyDefined="false" clrType="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>False</serializedValue>
        </property>
        <property path="/name" isComplexType="false" isExplicitlyDefined="true" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue>BasicHttpBinding_ICustomers</serializedValue>
        </property>
        <property path="/kind" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
        <property path="/endpointConfiguration" isComplexType="false" isExplicitlyDefined="false" clrType="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <serializedValue />
        </property>
      </properties>
    </endpoint>
  </endpoints>
</SavedWcfConfigurationInformation>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\AW2012Service\Customers2.xsd]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:tns="http://tempuri.org/" elementFormDefault="qualified" targetNamespace="http://tempuri.org/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import schemaLocation="http://localhost/CustomerWebService/Customers.svc?xsd=xsd2" namespace="http://schemas.datacontract.org/2004/07/AW2012CustomerService" />
  <xs:element name="GetCustomer">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="customerID" type="xs:int" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetCustomerResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element xmlns:q1="http://schemas.datacontract.org/2004/07/AW2012CustomerService" minOccurs="0" name="GetCustomerResult" nillable="true" type="q1:Customer" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetCustomers">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="GetCustomersResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element xmlns:q2="http://schemas.datacontract.org/2004/07/AW2012CustomerService" minOccurs="0" name="GetCustomersResult" nillable="true" type="q2:ArrayOfCustomer" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetCustomersByRegion">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="region" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetCustomersByRegionResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element xmlns:q3="http://schemas.datacontract.org/2004/07/AW2012CustomerService" minOccurs="0" name="GetCustomersByRegionResult" nillable="true" type="q3:ArrayOfCustomer" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\AW2012Service\Customers.wsdl]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/08/addressing/policy" xmlns:wsa10="http://www.w3.org/2005/08/addressing" xmlns:tns="http://tempuri.org/" xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="Customers" targetNamespace="http://tempuri.org/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xsd:schema targetNamespace="http://tempuri.org/Imports">
      <xsd:import schemaLocation="http://localhost/CustomerWebService/Customers.svc?xsd=xsd0" namespace="http://tempuri.org/" />
      <xsd:import schemaLocation="http://localhost/CustomerWebService/Customers.svc?xsd=xsd1" namespace="http://schemas.microsoft.com/2003/10/Serialization/" />
      <xsd:import schemaLocation="http://localhost/CustomerWebService/Customers.svc?xsd=xsd2" namespace="http://schemas.datacontract.org/2004/07/AW2012CustomerService" />
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ICustomers_GetCustomer_InputMessage">
    <wsdl:part name="parameters" element="tns:GetCustomer" />
  </wsdl:message>
  <wsdl:message name="ICustomers_GetCustomer_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetCustomerResponse" />
  </wsdl:message>
  <wsdl:message name="ICustomers_GetCustomers_InputMessage">
    <wsdl:part name="parameters" element="tns:GetCustomers" />
  </wsdl:message>
  <wsdl:message name="ICustomers_GetCustomers_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetCustomersResponse" />
  </wsdl:message>
  <wsdl:message name="ICustomers_GetCustomersByRegion_InputMessage">
    <wsdl:part name="parameters" element="tns:GetCustomersByRegion" />
  </wsdl:message>
  <wsdl:message name="ICustomers_GetCustomersByRegion_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetCustomersByRegionResponse" />
  </wsdl:message>
  <wsdl:portType name="ICustomers">
    <wsdl:operation name="GetCustomer">
      <wsdl:input wsaw:Action="http://tempuri.org/ICustomers/GetCustomer" message="tns:ICustomers_GetCustomer_InputMessage" />
      <wsdl:output wsaw:Action="http://tempuri.org/ICustomers/GetCustomerResponse" message="tns:ICustomers_GetCustomer_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetCustomers">
      <wsdl:input wsaw:Action="http://tempuri.org/ICustomers/GetCustomers" message="tns:ICustomers_GetCustomers_InputMessage" />
      <wsdl:output wsaw:Action="http://tempuri.org/ICustomers/GetCustomersResponse" message="tns:ICustomers_GetCustomers_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetCustomersByRegion">
      <wsdl:input wsaw:Action="http://tempuri.org/ICustomers/GetCustomersByRegion" message="tns:ICustomers_GetCustomersByRegion_InputMessage" />
      <wsdl:output wsaw:Action="http://tempuri.org/ICustomers/GetCustomersByRegionResponse" message="tns:ICustomers_GetCustomersByRegion_OutputMessage" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BasicHttpBinding_ICustomers" type="tns:ICustomers">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="GetCustomer">
      <soap:operation soapAction="http://tempuri.org/ICustomers/GetCustomer" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCustomers">
      <soap:operation soapAction="http://tempuri.org/ICustomers/GetCustomers" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCustomersByRegion">
      <soap:operation soapAction="http://tempuri.org/ICustomers/GetCustomersByRegion" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="Customers">
    <wsdl:port name="BasicHttpBinding_ICustomers" binding="tns:BasicHttpBinding_ICustomers">
      <soap:address location="http://localhost/CustomerWebService/Customers.svc" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\AW2012Service\Customers1.xsd]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="anyType" nillable="true" type="xs:anyType" />
  <xs:element name="anyURI" nillable="true" type="xs:anyURI" />
  <xs:element name="base64Binary" nillable="true" type="xs:base64Binary" />
  <xs:element name="boolean" nillable="true" type="xs:boolean" />
  <xs:element name="byte" nillable="true" type="xs:byte" />
  <xs:element name="dateTime" nillable="true" type="xs:dateTime" />
  <xs:element name="decimal" nillable="true" type="xs:decimal" />
  <xs:element name="double" nillable="true" type="xs:double" />
  <xs:element name="float" nillable="true" type="xs:float" />
  <xs:element name="int" nillable="true" type="xs:int" />
  <xs:element name="long" nillable="true" type="xs:long" />
  <xs:element name="QName" nillable="true" type="xs:QName" />
  <xs:element name="short" nillable="true" type="xs:short" />
  <xs:element name="string" nillable="true" type="xs:string" />
  <xs:element name="unsignedByte" nillable="true" type="xs:unsignedByte" />
  <xs:element name="unsignedInt" nillable="true" type="xs:unsignedInt" />
  <xs:element name="unsignedLong" nillable="true" type="xs:unsignedLong" />
  <xs:element name="unsignedShort" nillable="true" type="xs:unsignedShort" />
  <xs:element name="char" nillable="true" type="tns:char" />
  <xs:simpleType name="char">
    <xs:restriction base="xs:int" />
  </xs:simpleType>
  <xs:element name="duration" nillable="true" type="tns:duration" />
  <xs:simpleType name="duration">
    <xs:restriction base="xs:duration">
      <xs:pattern value="\-?P(\d*D)?(T(\d*H)?(\d*M)?(\d*(\.\d*)?S)?)?" />
      <xs:minInclusive value="-P10675199DT2H48M5.4775808S" />
      <xs:maxInclusive value="P10675199DT2H48M5.4775807S" />
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="guid" nillable="true" type="tns:guid" />
  <xs:simpleType name="guid">
    <xs:restriction base="xs:string">
      <xs:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}" />
    </xs:restriction>
  </xs:simpleType>
  <xs:attribute name="FactoryType" type="xs:QName" />
  <xs:attribute name="Id" type="xs:ID" />
  <xs:attribute name="Ref" type="xs:IDREF" />
</xs:schema>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\AW2012Service\Reference.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SC_1378a175ecbf4edda1761c1f68b42aa0.AW2012Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/AW2012CustomerService")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BusinessEntityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryRegionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Xml.XmlElement DemographicsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmailPromotionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateProvinceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine1 {
            get {
                return this.AddressLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine1Field, value) != true)) {
                    this.AddressLine1Field = value;
                    this.RaisePropertyChanged("AddressLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine2 {
            get {
                return this.AddressLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine2Field, value) != true)) {
                    this.AddressLine2Field = value;
                    this.RaisePropertyChanged("AddressLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressType {
            get {
                return this.AddressTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressTypeField, value) != true)) {
                    this.AddressTypeField = value;
                    this.RaisePropertyChanged("AddressType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BusinessEntityID {
            get {
                return this.BusinessEntityIDField;
            }
            set {
                if ((this.BusinessEntityIDField.Equals(value) != true)) {
                    this.BusinessEntityIDField = value;
                    this.RaisePropertyChanged("BusinessEntityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryRegionName {
            get {
                return this.CountryRegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryRegionNameField, value) != true)) {
                    this.CountryRegionNameField = value;
                    this.RaisePropertyChanged("CountryRegionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Xml.XmlElement Demographics {
            get {
                return this.DemographicsField;
            }
            set {
                if ((object.ReferenceEquals(this.DemographicsField, value) != true)) {
                    this.DemographicsField = value;
                    this.RaisePropertyChanged("Demographics");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmailPromotion {
            get {
                return this.EmailPromotionField;
            }
            set {
                if ((this.EmailPromotionField.Equals(value) != true)) {
                    this.EmailPromotionField = value;
                    this.RaisePropertyChanged("EmailPromotion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumberType {
            get {
                return this.PhoneNumberTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberTypeField, value) != true)) {
                    this.PhoneNumberTypeField = value;
                    this.RaisePropertyChanged("PhoneNumberType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateProvinceName {
            get {
                return this.StateProvinceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StateProvinceNameField, value) != true)) {
                    this.StateProvinceNameField = value;
                    this.RaisePropertyChanged("StateProvinceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suffix {
            get {
                return this.SuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SuffixField, value) != true)) {
                    this.SuffixField = value;
                    this.RaisePropertyChanged("Suffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AW2012Service.ICustomers")]
    public interface ICustomers {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomers/GetCustomer", ReplyAction="http://tempuri.org/ICustomers/GetCustomerResponse")]
        SC_1378a175ecbf4edda1761c1f68b42aa0.AW2012Service.Customer GetCustomer(int customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomers/GetCustomers", ReplyAction="http://tempuri.org/ICustomers/GetCustomersResponse")]
        SC_1378a175ecbf4edda1761c1f68b42aa0.AW2012Service.Customer[] GetCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomers/GetCustomersByRegion", ReplyAction="http://tempuri.org/ICustomers/GetCustomersByRegionResponse")]
        SC_1378a175ecbf4edda1761c1f68b42aa0.AW2012Service.Customer[] GetCustomersByRegion(string region);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomersChannel : SC_1378a175ecbf4edda1761c1f68b42aa0.AW2012Service.ICustomers, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomersClient : System.ServiceModel.ClientBase<SC_1378a175ecbf4edda1761c1f68b42aa0.AW2012Service.ICustomers>, SC_1378a175ecbf4edda1761c1f68b42aa0.AW2012Service.ICustomers {
        
        public CustomersClient() {
        }
        
        public CustomersClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomersClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomersClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomersClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SC_1378a175ecbf4edda1761c1f68b42aa0.AW2012Service.Customer GetCustomer(int customerID) {
            return base.Channel.GetCustomer(customerID);
        }
        
        public SC_1378a175ecbf4edda1761c1f68b42aa0.AW2012Service.Customer[] GetCustomers() {
            return base.Channel.GetCustomers();
        }
        
        public SC_1378a175ecbf4edda1761c1f68b42aa0.AW2012Service.Customer[] GetCustomersByRegion(string region) {
            return base.Channel.GetCustomersByRegion(region);
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\AW2012Service\SC_1378a175ecbf4edda1761c1f68b42aa0.AW2012Service.Customer.datasource]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<!--
    This file is automatically generated by Visual Studio .Net. It is 
    used to store generic object data source configuration information.  
    Renaming the file extension or editing the content of this file may   
    cause the file to be unrecognizable by the program.
-->
<GenericObjectDataSource DisplayName="Customer" Version="1.0" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
   <TypeInfo>SC_1378a175ecbf4edda1761c1f68b42aa0.AW2012Service.Customer, Service References.AW2012Service.Reference.cs, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null</TypeInfo>
</GenericObjectDataSource>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\AW2012Service\Reference.svcmap]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<ReferenceGroup xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" ID="0cc70293-0385-43d5-b6bd-3244bed5ec89" xmlns="urn:schemas-microsoft-com:xml-wcfservicemap">
  <ClientOptions>
    <GenerateAsynchronousMethods>false</GenerateAsynchronousMethods>
    <EnableDataBinding>true</EnableDataBinding>
    <ExcludedTypes />
    <ImportXmlTypes>false</ImportXmlTypes>
    <GenerateInternalTypes>false</GenerateInternalTypes>
    <GenerateMessageContracts>false</GenerateMessageContracts>
    <NamespaceMappings />
    <CollectionMappings />
    <GenerateSerializableTypes>true</GenerateSerializableTypes>
    <Serializer>Auto</Serializer>
    <UseSerializerForFaults>true</UseSerializerForFaults>
    <ReferenceAllAssemblies>true</ReferenceAllAssemblies>
    <ReferencedAssemblies />
    <ReferencedDataContractTypes />
    <ServiceContractMappings />
  </ClientOptions>
  <MetadataSources>
    <MetadataSource Address="http://localhost/CustomerWebService/Customers.svc" Protocol="http" SourceId="1" />
  </MetadataSources>
  <Metadata>
    <MetadataFile FileName="Customers.xsd" MetadataType="Schema" ID="69b7074a-347a-406a-9615-e4aa0101e692" SourceId="1" SourceUrl="http://localhost/CustomerWebService/Customers.svc?xsd=xsd2" />
    <MetadataFile FileName="Customers.disco" MetadataType="Disco" ID="92e3ec6a-a488-485b-a735-d87015d00a9d" SourceId="1" SourceUrl="http://localhost/CustomerWebService/Customers.svc?disco" />
    <MetadataFile FileName="Customers1.xsd" MetadataType="Schema" ID="e9405cc7-7a57-4f91-9e25-d53ba5b87520" SourceId="1" SourceUrl="http://localhost/CustomerWebService/Customers.svc?xsd=xsd1" />
    <MetadataFile FileName="Customers.wsdl" MetadataType="Wsdl" ID="58b2e436-a76c-4329-bb5f-5334f3646694" SourceId="1" SourceUrl="http://localhost/CustomerWebService/Customers.svc?wsdl" />
    <MetadataFile FileName="Customers2.xsd" MetadataType="Schema" ID="599bd3f0-1913-4f37-a356-a4de2df40be9" SourceId="1" SourceUrl="http://localhost/CustomerWebService/Customers.svc?xsd=xsd0" />
  </Metadata>
  <Extensions>
    <ExtensionFile FileName="configuration91.svcinfo" Name="configuration91.svcinfo" />
    <ExtensionFile FileName="configuration.svcinfo" Name="configuration.svcinfo" />
  </Extensions>
</ReferenceGroup>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Service References\AW2012Service\Customers.xsd]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:tns="http://schemas.datacontract.org/2004/07/AW2012CustomerService" elementFormDefault="qualified" targetNamespace="http://schemas.datacontract.org/2004/07/AW2012CustomerService" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:complexType name="Customer">
    <xs:sequence>
      <xs:element minOccurs="0" name="AddressLine1" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="AddressLine2" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="AddressType" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="BusinessEntityID" type="xs:int" />
      <xs:element minOccurs="0" name="City" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="CountryRegionName" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="Demographics" nillable="true">
        <xs:complexType>
          <xs:sequence>
            <xs:any minOccurs="0" processContents="lax" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" name="EmailAddress" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="EmailPromotion" type="xs:int" />
      <xs:element minOccurs="0" name="FirstName" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="LastName" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="MiddleName" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="PhoneNumber" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="PhoneNumberType" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="PostalCode" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="StateProvinceName" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="Suffix" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="Title" nillable="true" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Customer" nillable="true" type="tns:Customer" />
  <xs:complexType name="ArrayOfCustomer">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="Customer" nillable="true" type="tns:Customer" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfCustomer" nillable="true" type="tns:ArrayOfCustomer" />
</xs:schema>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_1378a175ecbf4edda1761c1f68b42aa0.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABWUPFEAAAAAAAAAAOAAAiELAQgAAC4AAAAIAAAAAAAAzk0A
AAAgAAAAYAAAAABAAAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHRNAABXAAAAAGAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA1C0AAAAgAAAALgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAYAAAAAYAAAAwAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAANgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACw
TQAAAAAAAEgAAAACAAUAWCcAABwmAAABAAAAAAAAAKAmAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CewEAAAQqIgIDfQEAAAQqHgJ7AgAABCqGAnsCAAAEAygT
AAAKLRICA30CAAAEAnIBAABwKCkAAAYqHgJ7AwAABCqGAnsDAAAEAygTAAAKLRICA30DAAAEAnIb
AABwKCkAAAYqHgJ7BAAABCqGAnsEAAAEAygTAAAKLRICA30EAAAEAnI1AABwKCkAAAYqHgJ7BQAA
BCqGAnwFAAAEAygUAAAKLRICA30FAAAEAnJNAABwKCkAAAYqHgJ7BgAABCqGAnsGAAAEAygTAAAK
LRICA30GAAAEAnJvAABwKCkAAAYqHgJ7BwAABCqGAnsHAAAEAygTAAAKLRICA30HAAAEAnJ5AABw
KCkAAAYqHgJ7CAAABCqGAnsIAAAEAygTAAAKLRICA30IAAAEAnKdAABwKCkAAAYqHgJ7CQAABCqG
AnsJAAAEAygTAAAKLRICA30JAAAEAnK3AABwKCkAAAYqHgJ7CgAABCqGAnwKAAAEAygUAAAKLRIC
A30KAAAEAnLRAABwKCkAAAYqHgJ7CwAABCqGAnsLAAAEAygTAAAKLRICA30LAAAEAnLvAABwKCkA
AAYqHgJ7DAAABCqGAnsMAAAEAygTAAAKLRICA30MAAAEAnIDAQBwKCkAAAYqHgJ7DQAABCqGAnsN
AAAEAygTAAAKLRICA30NAAAEAnIVAQBwKCkAAAYqHgJ7DgAABCqGAnsOAAAEAygTAAAKLRICA30O
AAAEAnIrAQBwKCkAAAYqHgJ7DwAABCqGAnsPAAAEAygTAAAKLRICA30PAAAEAnJDAQBwKCkAAAYq
HgJ7EAAABCqGAnsQAAAEAygTAAAKLRICA30QAAAEAnJjAQBwKCkAAAYqHgJ7EQAABCqGAnsRAAAE
AygTAAAKLRICA30RAAAEAnJ5AQBwKCkAAAYqHgJ7EgAABCqGAnsSAAAEAygTAAAKLRICA30SAAAE
AnKdAQBwKCkAAAYqHgJ7EwAABCqGAnsTAAAEAygTAAAKLRICA30TAAAEAnKrAQBwKCkAAAYqAAAA
EzADACkAAAABAAARAnsUAAAECgYLBwMoFQAACnQQAAABDAJ8FAAABAgHKAEAACsKBgcz3yoAAAAT
MAMAKQAAAAEAABECexQAAAQKBgsHAygXAAAKdBAAAAEMAnwUAAAECAcoAQAAKwoGBzPfKgAAABMw
BAAYAAAAAgAAEQJ7FAAABAoGLA0GAgNzGAAACm8ZAAAKKh4CKBoAAAoqHgIoHwAACioiAgMoIAAA
CiomAgMEKCEAAAoqJgIDBCgiAAAKKiYCAwQoIwAACio2AigkAAAKA28rAAAGKjICKCQAAApvLAAA
Bio2AigkAAAKA28tAAAGKn4CKCUAAAoCAnNJAAAGfRUAAAQCAnNKAAAGfRYAAAQqBipuAnsXAAAE
LBICexcAAARvRwAABgIUfRcAAAQqAAATMAUASQAAAAMAABEWCisuBAaUDgRytwEAcCgmAAAKMxkC
BQaaAgQGlCgnAAAKDgRzPwAABn0XAAAEBhdYCgYDMs4CbzoAAAYCbzcAAAYCKDgAAAYqBip2Aigp
AAAKAnMuAAAGfRgAAAQCexgAAARvKgAACipKAigrAAAKAnsYAAAEbywAAAoqEzACAGQAAAAEAAAR
AnsYAAAEcskBAHBvNQAABgoGDBYNK0YICZoLAnsXAAAEb0YAAAYCexcAAAQHbxUAAAZvRAAABgJ7
FwAABAdvFwAABm9CAAAGAnsXAAAEB28RAAAGb0AAAAYJF1gNCQiOaTK0Kh4CKDYAAAYqKgIDBAUo
LQAACiomAhYDKC4AAAoqWgMsCAIWKC8AAAoqctcBAHBzMAAACnomAhcDKC4AAAoqWgMsCAIXKC8A
AAoqctcBAHBzMAAACnomAhgDKC4AAAoqWgMsCAIYKC8AAAoqctcBAHBzMAAACnoeAigxAAAKKh4C
KDIAAAoqHgIoMwAACio6AigaAAAKAgN9GQAABCo6AigaAAAKAgN9GgAABCoeAigaAAAKKhMwAwAt
AAAABQAAEX4bAAAELSBydAIAcNALAAACKDUAAApvNgAACnM3AAAKCgaAGwAABH4bAAAEKhp+HAAA
BCoeAoAcAAAEKhp+HQAABCouc1AAAAaAHQAABCoeAig6AAAKKgAAAAAAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJT
SkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAGAOAAAjfgAAzA4AAIgPAAAjU3RyaW5n
cwAAAABUHgAA6AIAACNVUwA8IQAAEAAAACNHVUlEAAAATCEAANAEAAAjQmxvYgAAAAAAAAACAAAB
Vxe2CQkJAAAA+iUzABYAAAEAAAA5AAAADAAAAB0AAABRAAAAMQAAAAoAAAA6AAAAPwAAAAUAAAAB
AAAAAQAAAAQAAAAcAAAAMgAAAAIAAAABAAAABwAAAAEAAAABAAAAAAAKAAEAAAAAAAYAKQEiAQoA
TQEwAQ4AeQFjARIApAGQARIAswGQARIA4AHDARIA6QGQARIA/gGQAQYAEgIiARIAHgKQARYAaQJI
AhYAeQJIAg4AmwKGAgoAswIwARoAUQNGAw4AjwZjARIAGAiQARIAKAjDAR4AcwhIAhYAgghIAgYA
gwlyCQYAtAmfCQYA4ArGCgYACwv5CgYAIgv5CgYAPwv5CgYAXgv5CgYAdwv5CgYAkAv5CgYAqwv5
CgYAxgv5CgYA3wv5CgYAGAz4CwYAOAz4CwYAjQx6DA4AwgyqDAoA2QwwAQYA7wwiAQYABQ0iAQYA
HA0wAQYAQw0iAQYAUA0iAQYAcg1hDQ4AlQ1jAQ4AtQ1jAQoAyA0wARIA3A2QARIA9Q2QARYAOQ5I
AgYAfA4iAQYAlg56DAYAsw4iAQYAuA4iAQYA3A75Cg4A8g5jAQ4ACw9jAQYAIA/4CwAAAAABAAAA
AAABAAEAASAQADIAOwAFAAEAAQChAAAAbQA7AAAAFQArAKEAAAB4ADsAAAAVAC4AAQAQAIoAOwAK
ABUALgABABAAmgAAAC0AFQA2AAEAEACoAAAAGAAYADsAAQAQALMAAAAxABkAPwABABAAwQAAAAUA
GQBJAAEAEADNAAAABQAaAEoAAAAQANcA4QAFABsASwAAARAAEAHhADUAHQBPAIEAxwIhAAEA2gIl
AAEA7AIlAAEA/gIlAAEADwMoAAEAJQMlAAEALwMlAAEAXAMrAAEAbgMlAAEAgAMoAAEAlAMlAAEA
owMlAAEAsQMlAAEAwQMlAAEA0gMlAAEA5wMlAAEA9wMlAAEADgQlAAEAGgQlAAEAqwZXAAYAwQCf
AAYAzQCjAAYAswCnAAEAsAi3AAEAYgnSAAEAYgnSABEAkwncABEAwAngABEABAr+AFAgAAAAAOYJ
JQQvAAEAWCAAAAAA5gk3BDQAAQBhIAAAAACGCEkEOgACAGkgAAAAAIYIWgQ+AAIAiyAAAAAAhghr
BDoAAwCTIAAAAACGCHwEPgADALUgAAAAAIYIjQQ6AAQAvSAAAAAAhgidBD4ABADfIAAAAACGCK0E
QwAFAOcgAAAAAIYIwgRHAAUACSEAAAAAhgjXBDoABgARIQAAAACGCOAEPgAGADMhAAAAAIYI6QQ6
AAcAOyEAAAAAhgj/BD4ABwBdIQAAAACGCBUFTAAIAGUhAAAAAIYIJgVRAAgAhyEAAAAAhgg3BToA
CQCPIQAAAACGCEgFPgAJALEhAAAAAIYIWQVDAAoAuSEAAAAAhghsBUcACgDbIQAAAACGCH8FOgAL
AOMhAAAAAIYIjQU+AAsABSIAAAAAhgibBToADAANIgAAAACGCKgFPgAMAC8iAAAAAIYItQU6AA0A
NyIAAAAAhgjEBT4ADQBZIgAAAACGCNMFOgAOAGEiAAAAAIYI4wU+AA4AgyIAAAAAhgjzBToADwCL
IgAAAACGCAcGPgAPAK0iAAAAAIYIGwY6ABAAtSIAAAAAhggqBj4AEADXIgAAAACGCDkGOgARAN8i
AAAAAIYITwY+ABEAASMAAAAAhghlBjoAEgAJIwAAAACGCHAGPgASACsjAAAAAIYIewY6ABMAMyMA
AAAAhgiFBj4AEwBYIwAAAADmCbsGWwAUAJAjAAAAAOYJzwZbABUAyCMAAAAAhADmBj4AFgDsIwAA
AACGGPsGYQAXAAAAAAAAAMYF6gd3ABcAAAAAAAAAxgX2B30AGAAAAAAAAADGBQMIgwAYAPQjAAAA
AIYY+wZhABkA/CMAAAAAhhj7Bj4AGQAFJAAAAACGGPsGigAaAA8kAAAAAIYY+waQABwAGSQAAAAA
hhj7BpcAHgAjJAAAAADmAeoHdwAgADEkAAAAAOYB9gd9ACEAPiQAAAAA5gEDCIMAIQBMJAAAAACG
GPsGYQAiAGwkAAAAAMYBMAhhACIAbiQAAAAAgQA+CGEAIgCMJAAAAADGAJAIqwAiAOEkAAAAAMYB
nAhhACYA4yQAAAAAxgCzCGEAJgABJQAAAADGAL4IYQAmABQlAAAAAMYAnAhhACYAhCUAAAAAhhj7
BmEAJgCMJQAAAACGGPsGuwAmAJclAAAAAIYISAU+ACkAoSUAAAAAhgjKCMUAKgC4JQAAAACGCKgF
PgArAMIlAAAAAIYI4gjFACwA2SUAAAAAhgiNBT4ALQDjJQAAAACGCPYIxQAuAPolAAAAAIYACwlh
AC8AAiYAAAAAhgASCWEALwAKJgAAAACGACEJygAvABImAAAAAIYY+wbWAC8AISYAAAAAhhj7BtYA
MAAwJgAAAACDGPsGYQAxADgmAAAAAJMI0AnkADEAcSYAAAAAkwjkCekAMQB4JgAAAACTCPAJ7gAx
AIAmAAAAAJYIFAoCATIAkyYAAAAAhhj7BmEAMgCHJgAAAACRGDsPAwQyAAAAAQAoCgAAAQAoCgAA
AQAoCgAAAQAoCgAAAQAoCgAAAQAoCgAAAQAoCgAAAQAoCgAAAQAoCgAAAQAoCgAAAQAoCgAAAQAo
CgAAAQAoCgAAAQAoCgAAAQAoCgAAAQAoCgAAAQAoCgAAAQAoCgAAAQAoCgAAAQAoCgAAAQAoCgAA
AQAuCgAAAQA7CgAAAQBGCgAAAQBNCgAAAQBNCgAAAgBnCgAAAQBNCgAAAgBnCgAAAQB1CgAAAgBn
CgAAAQA7CgAAAQBGCgAAAQB9CgAAAgCFCgAAAwCPCgAABACXCgAAAQChCgAAAgCoCgAAAwCXCgAA
AQAoCgAAAQAoCgAAAQAoCgAAAQAoCgAAAQAoCgAAAQAoCgAAAQC8CgAAAQC8CgAAAQAoCgIACQAC
AA0ABAAMAAQAEQAEABUABAAZAAQAHQAEAAYABAAlAAUADAC5APsGPgDBAPsGPgDJAPsGPgDRAPsG
PgDZAPsGPgDhAPsGPgDpAPsGPgDxAPsGPgD5APsGPgABAfsGPgAJAfsGRwARAfsGYQAZAfsGYQAh
AfsGigApAfsGYQAxAfsGYQA5AfsGYQBBAfsGYQAJADMNmgFJAUkNoAFRAVkNpQFZAX4NsQFRAY4N
pQFhAfsGPgCBAK4NzAEJAPsGYQBpAfsGxQBxAfsGYQB5AfsGYQCBAfsGYQAUAPsGYQAUAPsGPgAU
APsGigAUAPsGkAAUAPsGlwAUABAOrwNZAPsGYQBZABwOtANZACgOuwOJAfsGYQBZALMIYQAUAGAO
YQBZAL4IYQAUAGUOYQBhAPsGuwBhAGsO0QNhAHQORwCRAfsGPgBhAAsJYQBhABIJYQBhACEJygCZ
AfsGYQChAcoO1wOhAeUO4AOpAPsG5gO5AfsG8wPJAfsGYQBpAPsGYQApANsA2QEuAFsApwQuAEMA
2QEuABsA2QEuADsAhwQuAAsABwQuABMATwQuAGMAsAQuACMA2QEuACsAeAQuADMATwRBAJMADAFD
AHsAOwFDAGsADAFDAHMAEQFJAOMADAFhAJMADAFjAHMA3wFjAOsAAAJpAOMADAGBAJMADAGDAHMA
3wGJAOMADAGhAJMADAGjAHMA3wGjAGsADAGpAOMADAHBAJMADAHJAOMADAHhAJMADAHjAEMBDAHp
AOMADAEBAZMADAEJAeMADAEhAZMADAEpAeMADAFBAZMADAFJAeMADAFhAZMADAFjAaMBDAFpAeMA
DAGBAZMADAGJAeMADAGhAZMADAGpAeMADAHBAZMADAHJAeMADAHhAZMADAHpAeMADAEBApMADAEJ
AuMADAEhApMADAEpAuMADAFBApMADAFJAuMADAFhApMADAFpAuMADAFJA8MB+gNpA8MB+gOhA8sB
DAFgBfMAMgKABfMAqgKgBfMAJAPDAdQBwQPFA+4DAgABAAAAqwZBAAIAAQAIABQACwAaAAwAHAAA
AAEHZQAAAA8HagAAABwHagAAACkHagAAADUHbgAAAEYHagAAAEsHagAAAF0HcgAAAGoHagAAAHcH
bgAAAIYHagAAAJAHagAAAJkHagAAAKQHagAAALAHagAAAMAHagAAAMsHagAAAN0HagAAAOQHagAA
AGoHagAAAC0JzgAAAJAHagAAAEEJzgAAAIYHagAAAFEJzgAAAIMJ9AAAAPwJ+QAAACAKBwEIACcA
AgAQACgAAgABAAIAAwACAAEAAwABAAQABQACAAMABQABAAYABwACAAUABwACAAcACQABAAgACQAC
AAkACwABAAoACwABAAwADQACAAsADQACAA0ADwABAA4ADwABABAAEQACAA8AEQABABIAEwACABEA
EwACABMAFQABABQAFQACABUAFwABABYAFwABABgAGQACABcAGQACABkAGwABABoAGwABABwAHQAC
ABsAHQABAB4AHwACAB0AHwACAB8AIQABACAAIQABACIAIwACACEAIwABACQAJQACACMAJQABACYA
JwACACUAJwABAEAAKQABAEEAKwABAEIALQABAEMALwABAEQAMQABAEUAMwACAEwANQACAE0ANwAB
AE4ANwACAE8AOQAKABEABIAAAAEAAADREkorAAAAAAAAVgwAAAQAAAAAAAAAAAAAAAEAGQEAAAAA
BAAAAAAAAAAAAAAAAQAwAQAAAAAEAAAAAAAAAAAAAAABACIBAAAAAAQAAAAAAAAAAAAAAAEAkAEA
AAAACwAAAAAAAAAAAAAAGAArAgAAAAAEAAAAAAAAAAAAAAABAEYDAAAAAAsAAAAAAAAAAAAAABgA
UggAAAAAAAAAAAEAAABCDwAALQC+AQAAADxNb2R1bGU+AFNDXzEzNzhhMTc1ZWNiZjRlZGRhMTc2
MWMxZjY4YjQyYWEwLmRsbABDdXN0b21lcgBTQ18xMzc4YTE3NWVjYmY0ZWRkYTE3NjFjMWY2OGI0
MmFhMC5BVzIwMTJTZXJ2aWNlAElDdXN0b21lcnMASUN1c3RvbWVyc0NoYW5uZWwAQ3VzdG9tZXJz
Q2xpZW50AFVzZXJDb21wb25lbnQAU2NyaXB0TWFpbgBPdXRwdXQwQnVmZmVyAENvbm5lY3Rpb25z
AFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfMTM3OGExNzVlY2JmNGVkZGExNzYxYzFmNjhiNDJhYTAu
UHJvcGVydGllcwBTZXR0aW5ncwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5SdW50aW1l
LlNlcmlhbGl6YXRpb24ASUV4dGVuc2libGVEYXRhT2JqZWN0AFN5c3RlbS5Db21wb25lbnRNb2Rl
bABJTm90aWZ5UHJvcGVydHlDaGFuZ2VkAFN5c3RlbS5TZXJ2aWNlTW9kZWwASUNsaWVudENoYW5u
ZWwASUNvbnRleHRDaGFubmVsAFN5c3RlbS5TZXJ2aWNlTW9kZWwuQ2hhbm5lbHMASUNoYW5uZWwA
SUNvbW11bmljYXRpb25PYmplY3QASUV4dGVuc2libGVPYmplY3RgMQBJRGlzcG9zYWJsZQBDbGll
bnRCYXNlYDEATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVy
LkR0cy5QaXBlbGluZQBTY3JpcHRDb21wb25lbnQAU2NyaXB0QnVmZmVyAFN5c3RlbS5Db25maWd1
cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEV4dGVuc2lvbkRhdGFPYmplY3QAZXh0ZW5z
aW9uRGF0YUZpZWxkAEFkZHJlc3NMaW5lMUZpZWxkAEFkZHJlc3NMaW5lMkZpZWxkAEFkZHJlc3NU
eXBlRmllbGQAQnVzaW5lc3NFbnRpdHlJREZpZWxkAENpdHlGaWVsZABDb3VudHJ5UmVnaW9uTmFt
ZUZpZWxkAFN5c3RlbS5YbWwAWG1sRWxlbWVudABEZW1vZ3JhcGhpY3NGaWVsZABFbWFpbEFkZHJl
c3NGaWVsZABFbWFpbFByb21vdGlvbkZpZWxkAEZpcnN0TmFtZUZpZWxkAExhc3ROYW1lRmllbGQA
TWlkZGxlTmFtZUZpZWxkAFBob25lTnVtYmVyRmllbGQAUGhvbmVOdW1iZXJUeXBlRmllbGQAUG9z
dGFsQ29kZUZpZWxkAFN0YXRlUHJvdmluY2VOYW1lRmllbGQAU3VmZml4RmllbGQAVGl0bGVGaWVs
ZABnZXRfRXh0ZW5zaW9uRGF0YQBzZXRfRXh0ZW5zaW9uRGF0YQBnZXRfQWRkcmVzc0xpbmUxAHNl
dF9BZGRyZXNzTGluZTEAZ2V0X0FkZHJlc3NMaW5lMgBzZXRfQWRkcmVzc0xpbmUyAGdldF9BZGRy
ZXNzVHlwZQBzZXRfQWRkcmVzc1R5cGUAZ2V0X0J1c2luZXNzRW50aXR5SUQAc2V0X0J1c2luZXNz
RW50aXR5SUQAZ2V0X0NpdHkAc2V0X0NpdHkAZ2V0X0NvdW50cnlSZWdpb25OYW1lAHNldF9Db3Vu
dHJ5UmVnaW9uTmFtZQBnZXRfRGVtb2dyYXBoaWNzAHNldF9EZW1vZ3JhcGhpY3MAZ2V0X0VtYWls
QWRkcmVzcwBzZXRfRW1haWxBZGRyZXNzAGdldF9FbWFpbFByb21vdGlvbgBzZXRfRW1haWxQcm9t
b3Rpb24AZ2V0X0ZpcnN0TmFtZQBzZXRfRmlyc3ROYW1lAGdldF9MYXN0TmFtZQBzZXRfTGFzdE5h
bWUAZ2V0X01pZGRsZU5hbWUAc2V0X01pZGRsZU5hbWUAZ2V0X1Bob25lTnVtYmVyAHNldF9QaG9u
ZU51bWJlcgBnZXRfUGhvbmVOdW1iZXJUeXBlAHNldF9QaG9uZU51bWJlclR5cGUAZ2V0X1Bvc3Rh
bENvZGUAc2V0X1Bvc3RhbENvZGUAZ2V0X1N0YXRlUHJvdmluY2VOYW1lAHNldF9TdGF0ZVByb3Zp
bmNlTmFtZQBnZXRfU3VmZml4AHNldF9TdWZmaXgAZ2V0X1RpdGxlAHNldF9UaXRsZQBQcm9wZXJ0
eUNoYW5nZWRFdmVudEhhbmRsZXIAUHJvcGVydHlDaGFuZ2VkAGFkZF9Qcm9wZXJ0eUNoYW5nZWQA
cmVtb3ZlX1Byb3BlcnR5Q2hhbmdlZABSYWlzZVByb3BlcnR5Q2hhbmdlZAAuY3RvcgBFeHRlbnNp
b25EYXRhAEFkZHJlc3NMaW5lMQBBZGRyZXNzTGluZTIAQWRkcmVzc1R5cGUAQnVzaW5lc3NFbnRp
dHlJRABDaXR5AENvdW50cnlSZWdpb25OYW1lAERlbW9ncmFwaGljcwBFbWFpbEFkZHJlc3MARW1h
aWxQcm9tb3Rpb24ARmlyc3ROYW1lAExhc3ROYW1lAE1pZGRsZU5hbWUAUGhvbmVOdW1iZXIAUGhv
bmVOdW1iZXJUeXBlAFBvc3RhbENvZGUAU3RhdGVQcm92aW5jZU5hbWUAU3VmZml4AFRpdGxlAEdl
dEN1c3RvbWVyAEdldEN1c3RvbWVycwBHZXRDdXN0b21lcnNCeVJlZ2lvbgBFbmRwb2ludEFkZHJl
c3MAQmluZGluZwBGaW5pc2hPdXRwdXRzAE1hcmtPdXRwdXRzRmluaXNoZWQATWljcm9zb2Z0LlNx
bFNlcnZlci5QaXBlbGluZUhvc3QAUGlwZWxpbmVCdWZmZXIAT3V0cHV0TmFtZU1hcABQcmltZU91
dHB1dABDcmVhdGVOZXdPdXRwdXRSb3dzAHdzAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAc2V0X0Vt
YWlsQWRkcmVzc19Jc051bGwAc2V0X0xhc3ROYW1lX0lzTnVsbABzZXRfRmlyc3ROYW1lX0lzTnVs
bABBZGRSb3cAU2V0RW5kT2ZSb3dzZXQARW5kT2ZSb3dzZXQARW1haWxBZGRyZXNzX0lzTnVsbABM
YXN0TmFtZV9Jc051bGwARmlyc3ROYW1lX0lzTnVsbABQYXJlbnRDb21wb25lbnQAU3lzdGVtLlJl
c291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24A
Q3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1
cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVs
dAB2YWx1ZQBwcm9wZXJ0eU5hbWUAY3VzdG9tZXJJRAByZWdpb24AZW5kcG9pbnRDb25maWd1cmF0
aW9uTmFtZQByZW1vdGVBZGRyZXNzAGJpbmRpbmcAT3V0cHV0cwBPdXRwdXRJRHMAQnVmZmVycwBP
dXRwdXRNYXAAQnVmZmVyAEJ1ZmZlckNvbHVtbkluZGV4ZXMAQ29tcG9uZW50AFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9u
AEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRy
YWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9u
QXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxh
eGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ18xMzc4YTE3
NWVjYmY0ZWRkYTE3NjFjMWY2OGI0MmFhMABTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJTdGVw
VGhyb3VnaEF0dHJpYnV0ZQBTeXN0ZW0uQ29kZURvbS5Db21waWxlcgBHZW5lcmF0ZWRDb2RlQXR0
cmlidXRlAERhdGFDb250cmFjdEF0dHJpYnV0ZQBTZXJpYWxpemFibGVBdHRyaWJ1dGUATm9uU2Vy
aWFsaXplZEF0dHJpYnV0ZQBPcHRpb25hbEZpZWxkQXR0cmlidXRlAFJlZmVyZW5jZUVxdWFscwBJ
bnQzMgBFcXVhbHMARGVsZWdhdGUAQ29tYmluZQBTeXN0ZW0uVGhyZWFkaW5nAEludGVybG9ja2Vk
AENvbXBhcmVFeGNoYW5nZQBSZW1vdmUAUHJvcGVydHlDaGFuZ2VkRXZlbnRBcmdzAEludm9rZQBC
cm93c2FibGVBdHRyaWJ1dGUARGF0YU1lbWJlckF0dHJpYnV0ZQBTZXJ2aWNlQ29udHJhY3RBdHRy
aWJ1dGUAT3BlcmF0aW9uQ29udHJhY3RBdHRyaWJ1dGUAZ2V0X0NoYW5uZWwAR2V0T3V0cHV0SUQA
R2V0Q29sdW1uSW5kZXhlcwBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBP
cGVuAENsb3NlAHNldF9JdGVtAFNldE51bGwASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBEZWJ1
Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZy
b21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBF
ZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU0Nf
MTM3OGExNzVlY2JmNGVkZGExNzYxYzFmNjhiNDJhYTAuUHJvcGVydGllcy5SZXNvdXJjZXMucmVz
b3VyY2VzAAAAAAAZQQBkAGQAcgBlAHMAcwBMAGkAbgBlADEAABlBAGQAZAByAGUAcwBzAEwAaQBu
AGUAMgAAF0EAZABkAHIAZQBzAHMAVAB5AHAAZQAAIUIAdQBzAGkAbgBlAHMAcwBFAG4AdABpAHQA
eQBJAEQAAAlDAGkAdAB5AAAjQwBvAHUAbgB0AHIAeQBSAGUAZwBpAG8AbgBOAGEAbQBlAAAZRABl
AG0AbwBnAHIAYQBwAGgAaQBjAHMAABlFAG0AYQBpAGwAQQBkAGQAcgBlAHMAcwAAHUUAbQBhAGkA
bABQAHIAbwBtAG8AdABpAG8AbgAAE0YAaQByAHMAdABOAGEAbQBlAAARTABhAHMAdABOAGEAbQBl
AAAVTQBpAGQAZABsAGUATgBhAG0AZQAAF1AAaABvAG4AZQBOAHUAbQBiAGUAcgAAH1AAaABvAG4A
ZQBOAHUAbQBiAGUAcgBUAHkAcABlAAAVUABvAHMAdABhAGwAQwBvAGQAZQAAI1MAdABhAHQAZQBQ
AHIAbwB2AGkAbgBjAGUATgBhAG0AZQAADVMAdQBmAGYAaQB4AAALVABpAHQAbABlAAARTwB1AHQA
cAB1AHQAIAAwAAANQwBhAG4AYQBkAGEAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkA
IABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBp
AGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMA
dABlAGEAZAAuAABxUwBDAF8AMQAzADcAOABhADEANwA1AGUAYwBiAGYANABlAGQAZABhADEANwA2
ADEAYwAxAGYANgA4AGIANAAyAGEAYQAwAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAAAF4QX0GVwg9PpRIWgqlNrAkACLd6XFYZNOCJBhUSIQESFQYVEikBEgwIiYRd
zYCAzJEDBhI5AgYOAgYIAwYSPQQgABI5BSABARI5AyAADgQgAQEOAyAACAQgAQEIBCAAEj0FIAEB
Ej0DBhJBBSABARJBAyAAAQQoABI5AygADgMoAAgEKAASPQUgARIICAUgAB0SCAYgAR0SCA4FIAIB
Dg4GIAIBDhJFByACARJJEkUDBhIkAwYSKAMGEiALIAQBCB0IHRJNElEDBhIUCSADARJNHQgSUQQg
AQECAyAAAgMoAAIDBhItBSABARItAwYSVQMGElkEAAASVQQAABJZBQABARJZBAgAElUECAASWQMG
EjAEAAASMAQIABIwBAEAAAApAQAcU3lzdGVtLlJ1bnRpbWUuU2VyaWFsaXphdGlvbgc0LjAuMC4w
AABeAQACAFQOBE5hbWUIQ3VzdG9tZXJUDglOYW1lc3BhY2U9aHR0cDovL3NjaGVtYXMuZGF0YWNv
bnRyYWN0Lm9yZy8yMDA0LzA3L0FXMjAxMkN1c3RvbWVyU2VydmljZQUAAgIcHAQgAQIICwACEoCp
EoCpEoCpDBABAx4AEB4AHgAeAAQKARJBCAcDEkESQRJBByACARwSgLEEBwESQQUBAAAAACABABNT
eXN0ZW0uU2VydmljZU1vZGVsBzQuMC4wLjAAADEBAAEAVA4RQ29uZmlndXJhdGlvbk5hbWUYQVcy
MDEyU2VydmljZS5JQ3VzdG9tZXJzdwEAAgBUDgZBY3Rpb24paHR0cDovL3RlbXB1cmkub3JnL0lD
dXN0b21lcnMvR2V0Q3VzdG9tZXJUDgtSZXBseUFjdGlvbjFodHRwOi8vdGVtcHVyaS5vcmcvSUN1
c3RvbWVycy9HZXRDdXN0b21lclJlc3BvbnNleQEAAgBUDgZBY3Rpb24qaHR0cDovL3RlbXB1cmku
b3JnL0lDdXN0b21lcnMvR2V0Q3VzdG9tZXJzVA4LUmVwbHlBY3Rpb24yaHR0cDovL3RlbXB1cmku
b3JnL0lDdXN0b21lcnMvR2V0Q3VzdG9tZXJzUmVzcG9uc2WAiQEAAgBUDgZBY3Rpb24yaHR0cDov
L3RlbXB1cmkub3JnL0lDdXN0b21lcnMvR2V0Q3VzdG9tZXJzQnlSZWdpb25UDgtSZXBseUFjdGlv
bjpodHRwOi8vdGVtcHVyaS5vcmcvSUN1c3RvbWVycy9HZXRDdXN0b21lcnNCeVJlZ2lvblJlc3Bv
bnNlBCAAEwAGAAIIElEOBSABHQgIAwcBCAsHBB0SCBIIHRIICAUgAgEIHAgAARKA0RGA1QUgABKA
2QcgAgEOEoDZBAcBElUGIAEBEYDhCAEAAgAAAAAAAwAAAUcBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTQ18x
Mzc4YTE3NWVjYmY0ZWRkYTE3NjFjMWY2OGI0MmFhMAAADgEACU1pY3Jvc29mdAAAHwEAGkNvcHly
aWdodCBAIE1pY3Jvc29mdCAyMDEzAAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25U
aHJvd3MBAJxNAAAAAAAAAAAAAL5NAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwTQAAAAAAAAAA
AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACBAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACA
AAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAPgDAAAA
AAAAAAAAAPgDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAA
AQBKK9ESAAABAEor0RI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBp
AGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARYAwAA
AQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAA0AwAAAQAwADAAMAAwADAANABiADAAAAA0
AAoAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAE0AaQBjAHIAbwBzAG8AZgB0AAAAcAAkAAEA
RgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADEAMwA3ADgAYQAxADcANQBl
AGMAYgBmADQAZQBkAGQAYQAxADcANgAxAGMAMQBmADYAOABiADQAMgBhAGEAMAAAAEAADwABAEYA
aQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA0ADgAMQA3AC4AMQAxADAAOAAyAAAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADEAMwA3ADgAYQAxADcANQBlAGMA
YgBmADQAZQBkAGQAYQAxADcANgAxAGMAMQBmADYAOABiADQAMgBhAGEAMAAuAGQAbABsAAAAXAAb
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
TQBpAGMAcgBvAHMAbwBmAHQAIAAyADAAMQAzAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBDAF8AMQAzADcAOABhADEANwA1AGUAYwBiAGYANABlAGQAZABhADEA
NwA2ADEAYwAxAGYANgA4AGIANAAyAGEAYQAwAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAQwBfADEAMwA3ADgAYQAxADcANQBlAGMAYgBmADQAZQBkAGQAYQAxADcA
NgAxAGMAMQBmADYAOABiADQAMgBhAGEAMAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANAA4ADEANwAuADEAMQAwADgAMgAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANAA4ADEANwAuADEAMQAwADgAMgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADQPQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_1378a175ecbf4edda1761c1f68b42aa0</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">1f775e337544ac441e227911f85ddc7a</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Script Component.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[EmailAddress]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[EmailAddress]"
                      name="EmailAddress" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[LastName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[LastName]"
                      name="LastName" />
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[FirstName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[FirstName]"
                      name="FirstName" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task.Paths[Output 0]"
              endId="Package\Data Flow Task\Row Count.Inputs[Row Count Input 1]"
              name="Output 0"
              startId="Package\Data Flow Task\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="152,42"
          Id="Package\Data Flow Task"
          TopLeft="251,181" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="164,42"
          Id="Package\Data Flow Task\Script Component"
          TopLeft="245,97" />
        <NodeLayout
          Size="131,42"
          Id="Package\Data Flow Task\Row Count"
          TopLeft="246,190" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 0]"
          TopLeft="327,139">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-15.5,51"
              Start="0,0"
              End="-15.5,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.5"
                    Point2="0,25.5"
                    Point3="-4,25.5" />
                  <mssgle:LineSegment
                    End="-11.5,25.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-11.5,25.5"
                    Point2="-15.5,25.5"
                    Point3="-15.5,29.5" />
                  <mssgle:LineSegment
                    End="-15.5,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.75,30.5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>